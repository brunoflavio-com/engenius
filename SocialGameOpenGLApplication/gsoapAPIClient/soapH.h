/* soapH.h
   Generated by gSOAP 2.8.17 from stub/Service1.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__string(soap, data),0) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_arr__ArrayOfint
#define SOAP_TYPE_arr__ArrayOfint (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_arr__ArrayOfint(struct soap*, const char*, int, const arr__ArrayOfint *, const char*);
SOAP_FMAC3 arr__ArrayOfint * SOAP_FMAC4 soap_in_arr__ArrayOfint(struct soap*, const char*, arr__ArrayOfint *, const char*);

#ifndef soap_write_arr__ArrayOfint
#define soap_write_arr__ArrayOfint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "arr:ArrayOfint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 arr__ArrayOfint * SOAP_FMAC4 soap_get_arr__ArrayOfint(struct soap*, arr__ArrayOfint *, const char*, const char*);

#ifndef soap_read_arr__ArrayOfint
#define soap_read_arr__ArrayOfint(soap, data) ( soap_begin_recv(soap) || !soap_get_arr__ArrayOfint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 arr__ArrayOfint * SOAP_FMAC2 soap_instantiate_arr__ArrayOfint(struct soap*, int, const char*, const char*, size_t*);

inline arr__ArrayOfint * soap_new_arr__ArrayOfint(struct soap *soap, int n = -1) { return soap_instantiate_arr__ArrayOfint(soap, n, NULL, NULL, NULL); }

inline arr__ArrayOfint * soap_new_req_arr__ArrayOfint(struct soap *soap) { arr__ArrayOfint *_p = soap_instantiate_arr__ArrayOfint(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline arr__ArrayOfint * soap_new_set_arr__ArrayOfint(struct soap *soap, std::vector<int >& int_) { arr__ArrayOfint *_p = soap_instantiate_arr__ArrayOfint(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->arr__ArrayOfint::int_ = int_; } return _p; }

inline void soap_delete_arr__ArrayOfint(struct soap *soap, arr__ArrayOfint *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_arr__ArrayOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__User
#define SOAP_TYPE_ns5__User (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__User(struct soap*, const char*, int, const ns5__User *, const char*);
SOAP_FMAC3 ns5__User * SOAP_FMAC4 soap_in_ns5__User(struct soap*, const char*, ns5__User *, const char*);

#ifndef soap_write_ns5__User
#define soap_write_ns5__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__User * SOAP_FMAC4 soap_get_ns5__User(struct soap*, ns5__User *, const char*, const char*);

#ifndef soap_read_ns5__User
#define soap_read_ns5__User(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__User(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__User * SOAP_FMAC2 soap_instantiate_ns5__User(struct soap*, int, const char*, const char*, size_t*);

inline ns5__User * soap_new_ns5__User(struct soap *soap, int n = -1) { return soap_instantiate_ns5__User(soap, n, NULL, NULL, NULL); }

inline ns5__User * soap_new_req_ns5__User(struct soap *soap) { ns5__User *_p = soap_instantiate_ns5__User(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__User * soap_new_set_ns5__User(struct soap *soap, std::string *Email, int *HumourStatusId, arr__ArrayOfint *InterestsIDs, std::string *Name, std::string *Surname) { ns5__User *_p = soap_instantiate_ns5__User(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__User::Email = Email; _p->ns5__User::HumourStatusId = HumourStatusId; _p->ns5__User::InterestsIDs = InterestsIDs; _p->ns5__User::Name = Name; _p->ns5__User::Surname = Surname; } return _p; }

inline void soap_delete_ns5__User(struct soap *soap, ns5__User *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__User(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfUser
#define SOAP_TYPE_ns5__ArrayOfUser (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfUser(struct soap*, const char*, int, const ns5__ArrayOfUser *, const char*);
SOAP_FMAC3 ns5__ArrayOfUser * SOAP_FMAC4 soap_in_ns5__ArrayOfUser(struct soap*, const char*, ns5__ArrayOfUser *, const char*);

#ifndef soap_write_ns5__ArrayOfUser
#define soap_write_ns5__ArrayOfUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfUser * SOAP_FMAC4 soap_get_ns5__ArrayOfUser(struct soap*, ns5__ArrayOfUser *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfUser
#define soap_read_ns5__ArrayOfUser(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfUser * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfUser(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfUser * soap_new_ns5__ArrayOfUser(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfUser(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfUser * soap_new_req_ns5__ArrayOfUser(struct soap *soap) { ns5__ArrayOfUser *_p = soap_instantiate_ns5__ArrayOfUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfUser * soap_new_set_ns5__ArrayOfUser(struct soap *soap, std::vector<ns5__User * >& User) { ns5__ArrayOfUser *_p = soap_instantiate_ns5__ArrayOfUser(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfUser::User = User; } return _p; }

inline void soap_delete_ns5__ArrayOfUser(struct soap *soap, ns5__ArrayOfUser *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfUser(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__Relationship
#define SOAP_TYPE_ns5__Relationship (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__Relationship(struct soap*, const char*, int, const ns5__Relationship *, const char*);
SOAP_FMAC3 ns5__Relationship * SOAP_FMAC4 soap_in_ns5__Relationship(struct soap*, const char*, ns5__Relationship *, const char*);

#ifndef soap_write_ns5__Relationship
#define soap_write_ns5__Relationship(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:Relationship", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__Relationship * SOAP_FMAC4 soap_get_ns5__Relationship(struct soap*, ns5__Relationship *, const char*, const char*);

#ifndef soap_read_ns5__Relationship
#define soap_read_ns5__Relationship(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__Relationship(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__Relationship * SOAP_FMAC2 soap_instantiate_ns5__Relationship(struct soap*, int, const char*, const char*, size_t*);

inline ns5__Relationship * soap_new_ns5__Relationship(struct soap *soap, int n = -1) { return soap_instantiate_ns5__Relationship(soap, n, NULL, NULL, NULL); }

inline ns5__Relationship * soap_new_req_ns5__Relationship(struct soap *soap) { ns5__Relationship *_p = soap_instantiate_ns5__Relationship(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__Relationship * soap_new_set_ns5__Relationship(struct soap *soap, int *RelationshipTagId, int *Strength, std::string *UserAEmail, std::string *UserBEmail) { ns5__Relationship *_p = soap_instantiate_ns5__Relationship(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__Relationship::RelationshipTagId = RelationshipTagId; _p->ns5__Relationship::Strength = Strength; _p->ns5__Relationship::UserAEmail = UserAEmail; _p->ns5__Relationship::UserBEmail = UserBEmail; } return _p; }

inline void soap_delete_ns5__Relationship(struct soap *soap, ns5__Relationship *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__Relationship(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfRelationship
#define SOAP_TYPE_ns5__ArrayOfRelationship (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfRelationship(struct soap*, const char*, int, const ns5__ArrayOfRelationship *, const char*);
SOAP_FMAC3 ns5__ArrayOfRelationship * SOAP_FMAC4 soap_in_ns5__ArrayOfRelationship(struct soap*, const char*, ns5__ArrayOfRelationship *, const char*);

#ifndef soap_write_ns5__ArrayOfRelationship
#define soap_write_ns5__ArrayOfRelationship(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfRelationship", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfRelationship * SOAP_FMAC4 soap_get_ns5__ArrayOfRelationship(struct soap*, ns5__ArrayOfRelationship *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfRelationship
#define soap_read_ns5__ArrayOfRelationship(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfRelationship(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfRelationship * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfRelationship(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfRelationship * soap_new_ns5__ArrayOfRelationship(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfRelationship(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfRelationship * soap_new_req_ns5__ArrayOfRelationship(struct soap *soap) { ns5__ArrayOfRelationship *_p = soap_instantiate_ns5__ArrayOfRelationship(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfRelationship * soap_new_set_ns5__ArrayOfRelationship(struct soap *soap, std::vector<ns5__Relationship * >& Relationship) { ns5__ArrayOfRelationship *_p = soap_instantiate_ns5__ArrayOfRelationship(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfRelationship::Relationship = Relationship; } return _p; }

inline void soap_delete_ns5__ArrayOfRelationship(struct soap *soap, ns5__ArrayOfRelationship *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfRelationship(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__RelationshipTag
#define SOAP_TYPE_ns5__RelationshipTag (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__RelationshipTag(struct soap*, const char*, int, const ns5__RelationshipTag *, const char*);
SOAP_FMAC3 ns5__RelationshipTag * SOAP_FMAC4 soap_in_ns5__RelationshipTag(struct soap*, const char*, ns5__RelationshipTag *, const char*);

#ifndef soap_write_ns5__RelationshipTag
#define soap_write_ns5__RelationshipTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:RelationshipTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__RelationshipTag * SOAP_FMAC4 soap_get_ns5__RelationshipTag(struct soap*, ns5__RelationshipTag *, const char*, const char*);

#ifndef soap_read_ns5__RelationshipTag
#define soap_read_ns5__RelationshipTag(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__RelationshipTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__RelationshipTag * SOAP_FMAC2 soap_instantiate_ns5__RelationshipTag(struct soap*, int, const char*, const char*, size_t*);

inline ns5__RelationshipTag * soap_new_ns5__RelationshipTag(struct soap *soap, int n = -1) { return soap_instantiate_ns5__RelationshipTag(soap, n, NULL, NULL, NULL); }

inline ns5__RelationshipTag * soap_new_req_ns5__RelationshipTag(struct soap *soap) { ns5__RelationshipTag *_p = soap_instantiate_ns5__RelationshipTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__RelationshipTag * soap_new_set_ns5__RelationshipTag(struct soap *soap, int *Id, std::string *Name) { ns5__RelationshipTag *_p = soap_instantiate_ns5__RelationshipTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__RelationshipTag::Id = Id; _p->ns5__RelationshipTag::Name = Name; } return _p; }

inline void soap_delete_ns5__RelationshipTag(struct soap *soap, ns5__RelationshipTag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__RelationshipTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfRelationshipTag
#define SOAP_TYPE_ns5__ArrayOfRelationshipTag (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfRelationshipTag(struct soap*, const char*, int, const ns5__ArrayOfRelationshipTag *, const char*);
SOAP_FMAC3 ns5__ArrayOfRelationshipTag * SOAP_FMAC4 soap_in_ns5__ArrayOfRelationshipTag(struct soap*, const char*, ns5__ArrayOfRelationshipTag *, const char*);

#ifndef soap_write_ns5__ArrayOfRelationshipTag
#define soap_write_ns5__ArrayOfRelationshipTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfRelationshipTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfRelationshipTag * SOAP_FMAC4 soap_get_ns5__ArrayOfRelationshipTag(struct soap*, ns5__ArrayOfRelationshipTag *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfRelationshipTag
#define soap_read_ns5__ArrayOfRelationshipTag(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfRelationshipTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfRelationshipTag * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfRelationshipTag(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfRelationshipTag * soap_new_ns5__ArrayOfRelationshipTag(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfRelationshipTag(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfRelationshipTag * soap_new_req_ns5__ArrayOfRelationshipTag(struct soap *soap) { ns5__ArrayOfRelationshipTag *_p = soap_instantiate_ns5__ArrayOfRelationshipTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfRelationshipTag * soap_new_set_ns5__ArrayOfRelationshipTag(struct soap *soap, std::vector<ns5__RelationshipTag * >& RelationshipTag) { ns5__ArrayOfRelationshipTag *_p = soap_instantiate_ns5__ArrayOfRelationshipTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfRelationshipTag::RelationshipTag = RelationshipTag; } return _p; }

inline void soap_delete_ns5__ArrayOfRelationshipTag(struct soap *soap, ns5__ArrayOfRelationshipTag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfRelationshipTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__Interest
#define SOAP_TYPE_ns5__Interest (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__Interest(struct soap*, const char*, int, const ns5__Interest *, const char*);
SOAP_FMAC3 ns5__Interest * SOAP_FMAC4 soap_in_ns5__Interest(struct soap*, const char*, ns5__Interest *, const char*);

#ifndef soap_write_ns5__Interest
#define soap_write_ns5__Interest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:Interest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__Interest * SOAP_FMAC4 soap_get_ns5__Interest(struct soap*, ns5__Interest *, const char*, const char*);

#ifndef soap_read_ns5__Interest
#define soap_read_ns5__Interest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__Interest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__Interest * SOAP_FMAC2 soap_instantiate_ns5__Interest(struct soap*, int, const char*, const char*, size_t*);

inline ns5__Interest * soap_new_ns5__Interest(struct soap *soap, int n = -1) { return soap_instantiate_ns5__Interest(soap, n, NULL, NULL, NULL); }

inline ns5__Interest * soap_new_req_ns5__Interest(struct soap *soap) { ns5__Interest *_p = soap_instantiate_ns5__Interest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__Interest * soap_new_set_ns5__Interest(struct soap *soap, int *Id, std::string *Name) { ns5__Interest *_p = soap_instantiate_ns5__Interest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__Interest::Id = Id; _p->ns5__Interest::Name = Name; } return _p; }

inline void soap_delete_ns5__Interest(struct soap *soap, ns5__Interest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__Interest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfInterest
#define SOAP_TYPE_ns5__ArrayOfInterest (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfInterest(struct soap*, const char*, int, const ns5__ArrayOfInterest *, const char*);
SOAP_FMAC3 ns5__ArrayOfInterest * SOAP_FMAC4 soap_in_ns5__ArrayOfInterest(struct soap*, const char*, ns5__ArrayOfInterest *, const char*);

#ifndef soap_write_ns5__ArrayOfInterest
#define soap_write_ns5__ArrayOfInterest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfInterest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfInterest * SOAP_FMAC4 soap_get_ns5__ArrayOfInterest(struct soap*, ns5__ArrayOfInterest *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfInterest
#define soap_read_ns5__ArrayOfInterest(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfInterest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfInterest * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfInterest(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfInterest * soap_new_ns5__ArrayOfInterest(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfInterest(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfInterest * soap_new_req_ns5__ArrayOfInterest(struct soap *soap) { ns5__ArrayOfInterest *_p = soap_instantiate_ns5__ArrayOfInterest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfInterest * soap_new_set_ns5__ArrayOfInterest(struct soap *soap, std::vector<ns5__Interest * >& Interest) { ns5__ArrayOfInterest *_p = soap_instantiate_ns5__ArrayOfInterest(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfInterest::Interest = Interest; } return _p; }

inline void soap_delete_ns5__ArrayOfInterest(struct soap *soap, ns5__ArrayOfInterest *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfInterest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__HumourStatus
#define SOAP_TYPE_ns5__HumourStatus (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__HumourStatus(struct soap*, const char*, int, const ns5__HumourStatus *, const char*);
SOAP_FMAC3 ns5__HumourStatus * SOAP_FMAC4 soap_in_ns5__HumourStatus(struct soap*, const char*, ns5__HumourStatus *, const char*);

#ifndef soap_write_ns5__HumourStatus
#define soap_write_ns5__HumourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:HumourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__HumourStatus * SOAP_FMAC4 soap_get_ns5__HumourStatus(struct soap*, ns5__HumourStatus *, const char*, const char*);

#ifndef soap_read_ns5__HumourStatus
#define soap_read_ns5__HumourStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__HumourStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__HumourStatus * SOAP_FMAC2 soap_instantiate_ns5__HumourStatus(struct soap*, int, const char*, const char*, size_t*);

inline ns5__HumourStatus * soap_new_ns5__HumourStatus(struct soap *soap, int n = -1) { return soap_instantiate_ns5__HumourStatus(soap, n, NULL, NULL, NULL); }

inline ns5__HumourStatus * soap_new_req_ns5__HumourStatus(struct soap *soap) { ns5__HumourStatus *_p = soap_instantiate_ns5__HumourStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__HumourStatus * soap_new_set_ns5__HumourStatus(struct soap *soap, int *Id, std::string *Name) { ns5__HumourStatus *_p = soap_instantiate_ns5__HumourStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__HumourStatus::Id = Id; _p->ns5__HumourStatus::Name = Name; } return _p; }

inline void soap_delete_ns5__HumourStatus(struct soap *soap, ns5__HumourStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__HumourStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__ArrayOfHumourStatus
#define SOAP_TYPE_ns5__ArrayOfHumourStatus (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__ArrayOfHumourStatus(struct soap*, const char*, int, const ns5__ArrayOfHumourStatus *, const char*);
SOAP_FMAC3 ns5__ArrayOfHumourStatus * SOAP_FMAC4 soap_in_ns5__ArrayOfHumourStatus(struct soap*, const char*, ns5__ArrayOfHumourStatus *, const char*);

#ifndef soap_write_ns5__ArrayOfHumourStatus
#define soap_write_ns5__ArrayOfHumourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:ArrayOfHumourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfHumourStatus * SOAP_FMAC4 soap_get_ns5__ArrayOfHumourStatus(struct soap*, ns5__ArrayOfHumourStatus *, const char*, const char*);

#ifndef soap_read_ns5__ArrayOfHumourStatus
#define soap_read_ns5__ArrayOfHumourStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__ArrayOfHumourStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__ArrayOfHumourStatus * SOAP_FMAC2 soap_instantiate_ns5__ArrayOfHumourStatus(struct soap*, int, const char*, const char*, size_t*);

inline ns5__ArrayOfHumourStatus * soap_new_ns5__ArrayOfHumourStatus(struct soap *soap, int n = -1) { return soap_instantiate_ns5__ArrayOfHumourStatus(soap, n, NULL, NULL, NULL); }

inline ns5__ArrayOfHumourStatus * soap_new_req_ns5__ArrayOfHumourStatus(struct soap *soap) { ns5__ArrayOfHumourStatus *_p = soap_instantiate_ns5__ArrayOfHumourStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__ArrayOfHumourStatus * soap_new_set_ns5__ArrayOfHumourStatus(struct soap *soap, std::vector<ns5__HumourStatus * >& HumourStatus) { ns5__ArrayOfHumourStatus *_p = soap_instantiate_ns5__ArrayOfHumourStatus(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__ArrayOfHumourStatus::HumourStatus = HumourStatus; } return _p; }

inline void soap_delete_ns5__ArrayOfHumourStatus(struct soap *soap, ns5__ArrayOfHumourStatus *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__ArrayOfHumourStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns5__Graph
#define SOAP_TYPE_ns5__Graph (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns5__Graph(struct soap*, const char*, int, const ns5__Graph *, const char*);
SOAP_FMAC3 ns5__Graph * SOAP_FMAC4 soap_in_ns5__Graph(struct soap*, const char*, ns5__Graph *, const char*);

#ifndef soap_write_ns5__Graph
#define soap_write_ns5__Graph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns5:Graph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__Graph * SOAP_FMAC4 soap_get_ns5__Graph(struct soap*, ns5__Graph *, const char*, const char*);

#ifndef soap_read_ns5__Graph
#define soap_read_ns5__Graph(soap, data) ( soap_begin_recv(soap) || !soap_get_ns5__Graph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns5__Graph * SOAP_FMAC2 soap_instantiate_ns5__Graph(struct soap*, int, const char*, const char*, size_t*);

inline ns5__Graph * soap_new_ns5__Graph(struct soap *soap, int n = -1) { return soap_instantiate_ns5__Graph(soap, n, NULL, NULL, NULL); }

inline ns5__Graph * soap_new_req_ns5__Graph(struct soap *soap) { ns5__Graph *_p = soap_instantiate_ns5__Graph(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns5__Graph * soap_new_set_ns5__Graph(struct soap *soap, ns5__ArrayOfHumourStatus *HumourStatus, ns5__ArrayOfInterest *Interests, ns5__ArrayOfRelationshipTag *RelationshipTags, ns5__ArrayOfRelationship *Relationships, ns5__ArrayOfUser *Users) { ns5__Graph *_p = soap_instantiate_ns5__Graph(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns5__Graph::HumourStatus = HumourStatus; _p->ns5__Graph::Interests = Interests; _p->ns5__Graph::RelationshipTags = RelationshipTags; _p->ns5__Graph::Relationships = Relationships; _p->ns5__Graph::Users = Users; } return _p; }

inline void soap_delete_ns5__Graph(struct soap *soap, ns5__Graph *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns5__Graph(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns4__Exception
#define SOAP_TYPE_ns4__Exception (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__Exception(struct soap*, const char*, int, const ns4__Exception *, const char*);
SOAP_FMAC3 ns4__Exception * SOAP_FMAC4 soap_in_ns4__Exception(struct soap*, const char*, ns4__Exception *, const char*);

#ifndef soap_write_ns4__Exception
#define soap_write_ns4__Exception(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns4:Exception", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns4__Exception * SOAP_FMAC4 soap_get_ns4__Exception(struct soap*, ns4__Exception *, const char*, const char*);

#ifndef soap_read_ns4__Exception
#define soap_read_ns4__Exception(soap, data) ( soap_begin_recv(soap) || !soap_get_ns4__Exception(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns4__Exception * SOAP_FMAC2 soap_instantiate_ns4__Exception(struct soap*, int, const char*, const char*, size_t*);

inline ns4__Exception * soap_new_ns4__Exception(struct soap *soap, int n = -1) { return soap_instantiate_ns4__Exception(soap, n, NULL, NULL, NULL); }

inline ns4__Exception * soap_new_req_ns4__Exception(struct soap *soap) { ns4__Exception *_p = soap_instantiate_ns4__Exception(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns4__Exception * soap_new_set_ns4__Exception(struct soap *soap, std::vector<char * >& __any, int _ser__FactoryType) { ns4__Exception *_p = soap_instantiate_ns4__Exception(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns4__Exception::__any = __any; _p->ns4__Exception::_ser__FactoryType = _ser__FactoryType; } return _p; }

inline void soap_delete_ns4__Exception(struct soap *soap, ns4__Exception *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns4__Exception(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns4__SystemException
#define SOAP_TYPE_ns4__SystemException (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns4__SystemException(struct soap*, const char*, int, const ns4__SystemException *, const char*);
SOAP_FMAC3 ns4__SystemException * SOAP_FMAC4 soap_in_ns4__SystemException(struct soap*, const char*, ns4__SystemException *, const char*);

#ifndef soap_write_ns4__SystemException
#define soap_write_ns4__SystemException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns4:SystemException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns4__SystemException * SOAP_FMAC4 soap_get_ns4__SystemException(struct soap*, ns4__SystemException *, const char*, const char*);

#ifndef soap_read_ns4__SystemException
#define soap_read_ns4__SystemException(soap, data) ( soap_begin_recv(soap) || !soap_get_ns4__SystemException(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns4__SystemException * SOAP_FMAC2 soap_instantiate_ns4__SystemException(struct soap*, int, const char*, const char*, size_t*);

inline ns4__SystemException * soap_new_ns4__SystemException(struct soap *soap, int n = -1) { return soap_instantiate_ns4__SystemException(soap, n, NULL, NULL, NULL); }

inline ns4__SystemException * soap_new_req_ns4__SystemException(struct soap *soap) { ns4__SystemException *_p = soap_instantiate_ns4__SystemException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns4__SystemException * soap_new_set_ns4__SystemException(struct soap *soap, std::vector<char * >& __any1, int _ser__FactoryType1) { ns4__SystemException *_p = soap_instantiate_ns4__SystemException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns4__Exception::__any = __any1; _p->ns4__Exception::_ser__FactoryType = _ser__FactoryType1; } return _p; }

inline void soap_delete_ns4__SystemException(struct soap *soap, ns4__SystemException *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns4__SystemException(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__ArrayOfFaultException_x002eFaultReasonData
#define SOAP_TYPE_ns3__ArrayOfFaultException_x002eFaultReasonData (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap*, const char*, int, const ns3__ArrayOfFaultException_x002eFaultReasonData *, const char*);
SOAP_FMAC3 ns3__ArrayOfFaultException_x002eFaultReasonData * SOAP_FMAC4 soap_in_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap*, const char*, ns3__ArrayOfFaultException_x002eFaultReasonData *, const char*);

#ifndef soap_write_ns3__ArrayOfFaultException_x002eFaultReasonData
#define soap_write_ns3__ArrayOfFaultException_x002eFaultReasonData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:ArrayOfFaultException.FaultReasonData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ArrayOfFaultException_x002eFaultReasonData * SOAP_FMAC4 soap_get_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap*, ns3__ArrayOfFaultException_x002eFaultReasonData *, const char*, const char*);

#ifndef soap_read_ns3__ArrayOfFaultException_x002eFaultReasonData
#define soap_read_ns3__ArrayOfFaultException_x002eFaultReasonData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__ArrayOfFaultException_x002eFaultReasonData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__ArrayOfFaultException_x002eFaultReasonData * SOAP_FMAC2 soap_instantiate_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ArrayOfFaultException_x002eFaultReasonData * soap_new_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ArrayOfFaultException_x002eFaultReasonData(soap, n, NULL, NULL, NULL); }

inline ns3__ArrayOfFaultException_x002eFaultReasonData * soap_new_req_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap *soap) { ns3__ArrayOfFaultException_x002eFaultReasonData *_p = soap_instantiate_ns3__ArrayOfFaultException_x002eFaultReasonData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__ArrayOfFaultException_x002eFaultReasonData * soap_new_set_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap *soap, std::vector<ns3__FaultException_x002eFaultReasonData * >& FaultException_x002eFaultReasonData) { ns3__ArrayOfFaultException_x002eFaultReasonData *_p = soap_instantiate_ns3__ArrayOfFaultException_x002eFaultReasonData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__ArrayOfFaultException_x002eFaultReasonData::FaultException_x002eFaultReasonData = FaultException_x002eFaultReasonData; } return _p; }

inline void soap_delete_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap *soap, ns3__ArrayOfFaultException_x002eFaultReasonData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__ArrayOfFaultException_x002eFaultReasonData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__FaultException_x002eFaultReasonData
#define SOAP_TYPE_ns3__FaultException_x002eFaultReasonData (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__FaultException_x002eFaultReasonData(struct soap*, const char*, int, const ns3__FaultException_x002eFaultReasonData *, const char*);
SOAP_FMAC3 ns3__FaultException_x002eFaultReasonData * SOAP_FMAC4 soap_in_ns3__FaultException_x002eFaultReasonData(struct soap*, const char*, ns3__FaultException_x002eFaultReasonData *, const char*);

#ifndef soap_write_ns3__FaultException_x002eFaultReasonData
#define soap_write_ns3__FaultException_x002eFaultReasonData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:FaultException.FaultReasonData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__FaultException_x002eFaultReasonData * SOAP_FMAC4 soap_get_ns3__FaultException_x002eFaultReasonData(struct soap*, ns3__FaultException_x002eFaultReasonData *, const char*, const char*);

#ifndef soap_read_ns3__FaultException_x002eFaultReasonData
#define soap_read_ns3__FaultException_x002eFaultReasonData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__FaultException_x002eFaultReasonData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__FaultException_x002eFaultReasonData * SOAP_FMAC2 soap_instantiate_ns3__FaultException_x002eFaultReasonData(struct soap*, int, const char*, const char*, size_t*);

inline ns3__FaultException_x002eFaultReasonData * soap_new_ns3__FaultException_x002eFaultReasonData(struct soap *soap, int n = -1) { return soap_instantiate_ns3__FaultException_x002eFaultReasonData(soap, n, NULL, NULL, NULL); }

inline ns3__FaultException_x002eFaultReasonData * soap_new_req_ns3__FaultException_x002eFaultReasonData(struct soap *soap) { ns3__FaultException_x002eFaultReasonData *_p = soap_instantiate_ns3__FaultException_x002eFaultReasonData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__FaultException_x002eFaultReasonData * soap_new_set_ns3__FaultException_x002eFaultReasonData(struct soap *soap, std::string *text, std::string *xmlLang) { ns3__FaultException_x002eFaultReasonData *_p = soap_instantiate_ns3__FaultException_x002eFaultReasonData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__FaultException_x002eFaultReasonData::text = text; _p->ns3__FaultException_x002eFaultReasonData::xmlLang = xmlLang; } return _p; }

inline void soap_delete_ns3__FaultException_x002eFaultReasonData(struct soap *soap, ns3__FaultException_x002eFaultReasonData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__FaultException_x002eFaultReasonData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__FaultException_x002eFaultCodeData
#define SOAP_TYPE_ns3__FaultException_x002eFaultCodeData (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__FaultException_x002eFaultCodeData(struct soap*, const char*, int, const ns3__FaultException_x002eFaultCodeData *, const char*);
SOAP_FMAC3 ns3__FaultException_x002eFaultCodeData * SOAP_FMAC4 soap_in_ns3__FaultException_x002eFaultCodeData(struct soap*, const char*, ns3__FaultException_x002eFaultCodeData *, const char*);

#ifndef soap_write_ns3__FaultException_x002eFaultCodeData
#define soap_write_ns3__FaultException_x002eFaultCodeData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:FaultException.FaultCodeData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__FaultException_x002eFaultCodeData * SOAP_FMAC4 soap_get_ns3__FaultException_x002eFaultCodeData(struct soap*, ns3__FaultException_x002eFaultCodeData *, const char*, const char*);

#ifndef soap_read_ns3__FaultException_x002eFaultCodeData
#define soap_read_ns3__FaultException_x002eFaultCodeData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__FaultException_x002eFaultCodeData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__FaultException_x002eFaultCodeData * SOAP_FMAC2 soap_instantiate_ns3__FaultException_x002eFaultCodeData(struct soap*, int, const char*, const char*, size_t*);

inline ns3__FaultException_x002eFaultCodeData * soap_new_ns3__FaultException_x002eFaultCodeData(struct soap *soap, int n = -1) { return soap_instantiate_ns3__FaultException_x002eFaultCodeData(soap, n, NULL, NULL, NULL); }

inline ns3__FaultException_x002eFaultCodeData * soap_new_req_ns3__FaultException_x002eFaultCodeData(struct soap *soap) { ns3__FaultException_x002eFaultCodeData *_p = soap_instantiate_ns3__FaultException_x002eFaultCodeData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__FaultException_x002eFaultCodeData * soap_new_set_ns3__FaultException_x002eFaultCodeData(struct soap *soap, std::string *name, std::string *ns) { ns3__FaultException_x002eFaultCodeData *_p = soap_instantiate_ns3__FaultException_x002eFaultCodeData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__FaultException_x002eFaultCodeData::name = name; _p->ns3__FaultException_x002eFaultCodeData::ns = ns; } return _p; }

inline void soap_delete_ns3__FaultException_x002eFaultCodeData(struct soap *soap, ns3__FaultException_x002eFaultCodeData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__FaultException_x002eFaultCodeData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__ArrayOfFaultException_x002eFaultCodeData
#define SOAP_TYPE_ns3__ArrayOfFaultException_x002eFaultCodeData (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap*, const char*, int, const ns3__ArrayOfFaultException_x002eFaultCodeData *, const char*);
SOAP_FMAC3 ns3__ArrayOfFaultException_x002eFaultCodeData * SOAP_FMAC4 soap_in_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap*, const char*, ns3__ArrayOfFaultException_x002eFaultCodeData *, const char*);

#ifndef soap_write_ns3__ArrayOfFaultException_x002eFaultCodeData
#define soap_write_ns3__ArrayOfFaultException_x002eFaultCodeData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:ArrayOfFaultException.FaultCodeData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ArrayOfFaultException_x002eFaultCodeData * SOAP_FMAC4 soap_get_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap*, ns3__ArrayOfFaultException_x002eFaultCodeData *, const char*, const char*);

#ifndef soap_read_ns3__ArrayOfFaultException_x002eFaultCodeData
#define soap_read_ns3__ArrayOfFaultException_x002eFaultCodeData(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__ArrayOfFaultException_x002eFaultCodeData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__ArrayOfFaultException_x002eFaultCodeData * SOAP_FMAC2 soap_instantiate_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ArrayOfFaultException_x002eFaultCodeData * soap_new_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ArrayOfFaultException_x002eFaultCodeData(soap, n, NULL, NULL, NULL); }

inline ns3__ArrayOfFaultException_x002eFaultCodeData * soap_new_req_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap *soap) { ns3__ArrayOfFaultException_x002eFaultCodeData *_p = soap_instantiate_ns3__ArrayOfFaultException_x002eFaultCodeData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__ArrayOfFaultException_x002eFaultCodeData * soap_new_set_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap *soap, std::vector<ns3__FaultException_x002eFaultCodeData * >& FaultException_x002eFaultCodeData) { ns3__ArrayOfFaultException_x002eFaultCodeData *_p = soap_instantiate_ns3__ArrayOfFaultException_x002eFaultCodeData(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__ArrayOfFaultException_x002eFaultCodeData::FaultException_x002eFaultCodeData = FaultException_x002eFaultCodeData; } return _p; }

inline void soap_delete_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap *soap, ns3__ArrayOfFaultException_x002eFaultCodeData *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__ArrayOfFaultException_x002eFaultCodeData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__CommunicationException
#define SOAP_TYPE_ns3__CommunicationException (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__CommunicationException(struct soap*, const char*, int, const ns3__CommunicationException *, const char*);
SOAP_FMAC3 ns3__CommunicationException * SOAP_FMAC4 soap_in_ns3__CommunicationException(struct soap*, const char*, ns3__CommunicationException *, const char*);

#ifndef soap_write_ns3__CommunicationException
#define soap_write_ns3__CommunicationException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:CommunicationException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__CommunicationException * SOAP_FMAC4 soap_get_ns3__CommunicationException(struct soap*, ns3__CommunicationException *, const char*, const char*);

#ifndef soap_read_ns3__CommunicationException
#define soap_read_ns3__CommunicationException(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__CommunicationException(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__CommunicationException * SOAP_FMAC2 soap_instantiate_ns3__CommunicationException(struct soap*, int, const char*, const char*, size_t*);

inline ns3__CommunicationException * soap_new_ns3__CommunicationException(struct soap *soap, int n = -1) { return soap_instantiate_ns3__CommunicationException(soap, n, NULL, NULL, NULL); }

inline ns3__CommunicationException * soap_new_req_ns3__CommunicationException(struct soap *soap) { ns3__CommunicationException *_p = soap_instantiate_ns3__CommunicationException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__CommunicationException * soap_new_set_ns3__CommunicationException(struct soap *soap, std::vector<char * >& __any2, int _ser__FactoryType2) { ns3__CommunicationException *_p = soap_instantiate_ns3__CommunicationException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns4__Exception::__any = __any2; _p->ns4__Exception::_ser__FactoryType = _ser__FactoryType2; } return _p; }

inline void soap_delete_ns3__CommunicationException(struct soap *soap, ns3__CommunicationException *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__CommunicationException(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__FaultException
#define SOAP_TYPE_ns3__FaultException (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__FaultException(struct soap*, const char*, int, const ns3__FaultException *, const char*);
SOAP_FMAC3 ns3__FaultException * SOAP_FMAC4 soap_in_ns3__FaultException(struct soap*, const char*, ns3__FaultException *, const char*);

#ifndef soap_write_ns3__FaultException
#define soap_write_ns3__FaultException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:FaultException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__FaultException * SOAP_FMAC4 soap_get_ns3__FaultException(struct soap*, ns3__FaultException *, const char*, const char*);

#ifndef soap_read_ns3__FaultException
#define soap_read_ns3__FaultException(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__FaultException(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__FaultException * SOAP_FMAC2 soap_instantiate_ns3__FaultException(struct soap*, int, const char*, const char*, size_t*);

inline ns3__FaultException * soap_new_ns3__FaultException(struct soap *soap, int n = -1) { return soap_instantiate_ns3__FaultException(soap, n, NULL, NULL, NULL); }

inline ns3__FaultException * soap_new_req_ns3__FaultException(struct soap *soap) { ns3__FaultException *_p = soap_instantiate_ns3__FaultException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__FaultException * soap_new_set_ns3__FaultException(struct soap *soap, std::vector<char * >& __any3, int _ser__FactoryType3) { ns3__FaultException *_p = soap_instantiate_ns3__FaultException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns4__Exception::__any = __any3; _p->ns4__Exception::_ser__FactoryType = _ser__FactoryType3; } return _p; }

inline void soap_delete_ns3__FaultException(struct soap *soap, ns3__FaultException *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__FaultException(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LogoutResponse
#define SOAP_TYPE__ns1__LogoutResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LogoutResponse(struct soap*, const char*, int, const _ns1__LogoutResponse *, const char*);
SOAP_FMAC3 _ns1__LogoutResponse * SOAP_FMAC4 soap_in__ns1__LogoutResponse(struct soap*, const char*, _ns1__LogoutResponse *, const char*);

#ifndef soap_write__ns1__LogoutResponse
#define soap_write__ns1__LogoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LogoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LogoutResponse * SOAP_FMAC4 soap_get__ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse *, const char*, const char*);

#ifndef soap_read__ns1__LogoutResponse
#define soap_read__ns1__LogoutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LogoutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LogoutResponse * SOAP_FMAC2 soap_instantiate__ns1__LogoutResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LogoutResponse * soap_new__ns1__LogoutResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LogoutResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LogoutResponse * soap_new_req__ns1__LogoutResponse(struct soap *soap) { _ns1__LogoutResponse *_p = soap_instantiate__ns1__LogoutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LogoutResponse * soap_new_set__ns1__LogoutResponse(struct soap *soap) { _ns1__LogoutResponse *_p = soap_instantiate__ns1__LogoutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__LogoutResponse(struct soap *soap, _ns1__LogoutResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LogoutResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Logout
#define SOAP_TYPE__ns1__Logout (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Logout(struct soap*, const char*, int, const _ns1__Logout *, const char*);
SOAP_FMAC3 _ns1__Logout * SOAP_FMAC4 soap_in__ns1__Logout(struct soap*, const char*, _ns1__Logout *, const char*);

#ifndef soap_write__ns1__Logout
#define soap_write__ns1__Logout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:Logout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Logout * SOAP_FMAC4 soap_get__ns1__Logout(struct soap*, _ns1__Logout *, const char*, const char*);

#ifndef soap_read__ns1__Logout
#define soap_read__ns1__Logout(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Logout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__Logout * SOAP_FMAC2 soap_instantiate__ns1__Logout(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Logout * soap_new__ns1__Logout(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Logout(soap, n, NULL, NULL, NULL); }

inline _ns1__Logout * soap_new_req__ns1__Logout(struct soap *soap) { _ns1__Logout *_p = soap_instantiate__ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__Logout * soap_new_set__ns1__Logout(struct soap *soap, std::string *Token) { _ns1__Logout *_p = soap_instantiate__ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Logout::Token = Token; } return _p; }

inline void soap_delete__ns1__Logout(struct soap *soap, _ns1__Logout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Logout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetGraphResponse
#define SOAP_TYPE__ns1__GetGraphResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGraphResponse(struct soap*, const char*, int, const _ns1__GetGraphResponse *, const char*);
SOAP_FMAC3 _ns1__GetGraphResponse * SOAP_FMAC4 soap_in__ns1__GetGraphResponse(struct soap*, const char*, _ns1__GetGraphResponse *, const char*);

#ifndef soap_write__ns1__GetGraphResponse
#define soap_write__ns1__GetGraphResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetGraphResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraphResponse * SOAP_FMAC4 soap_get__ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetGraphResponse
#define soap_read__ns1__GetGraphResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetGraphResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetGraphResponse * SOAP_FMAC2 soap_instantiate__ns1__GetGraphResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGraphResponse * soap_new__ns1__GetGraphResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetGraphResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetGraphResponse * soap_new_req__ns1__GetGraphResponse(struct soap *soap) { _ns1__GetGraphResponse *_p = soap_instantiate__ns1__GetGraphResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetGraphResponse * soap_new_set__ns1__GetGraphResponse(struct soap *soap, ns5__Graph *GetGraphResult) { _ns1__GetGraphResponse *_p = soap_instantiate__ns1__GetGraphResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetGraphResponse::GetGraphResult = GetGraphResult; } return _p; }

inline void soap_delete__ns1__GetGraphResponse(struct soap *soap, _ns1__GetGraphResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetGraphResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetGraph
#define SOAP_TYPE__ns1__GetGraph (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGraph(struct soap*, const char*, int, const _ns1__GetGraph *, const char*);
SOAP_FMAC3 _ns1__GetGraph * SOAP_FMAC4 soap_in__ns1__GetGraph(struct soap*, const char*, _ns1__GetGraph *, const char*);

#ifndef soap_write__ns1__GetGraph
#define soap_write__ns1__GetGraph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetGraph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraph * SOAP_FMAC4 soap_get__ns1__GetGraph(struct soap*, _ns1__GetGraph *, const char*, const char*);

#ifndef soap_read__ns1__GetGraph
#define soap_read__ns1__GetGraph(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetGraph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetGraph * SOAP_FMAC2 soap_instantiate__ns1__GetGraph(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGraph * soap_new__ns1__GetGraph(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetGraph(soap, n, NULL, NULL, NULL); }

inline _ns1__GetGraph * soap_new_req__ns1__GetGraph(struct soap *soap) { _ns1__GetGraph *_p = soap_instantiate__ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetGraph * soap_new_set__ns1__GetGraph(struct soap *soap, std::string *Token, std::string *Email, int *graphDepth) { _ns1__GetGraph *_p = soap_instantiate__ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetGraph::Token = Token; _p->_ns1__GetGraph::Email = Email; _p->_ns1__GetGraph::graphDepth = graphDepth; } return _p; }

inline void soap_delete__ns1__GetGraph(struct soap *soap, _ns1__GetGraph *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetGraph(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LoginResponse
#define SOAP_TYPE__ns1__LoginResponse (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LoginResponse(struct soap*, const char*, int, const _ns1__LoginResponse *, const char*);
SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_in__ns1__LoginResponse(struct soap*, const char*, _ns1__LoginResponse *, const char*);

#ifndef soap_write__ns1__LoginResponse
#define soap_write__ns1__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_get__ns1__LoginResponse(struct soap*, _ns1__LoginResponse *, const char*, const char*);

#ifndef soap_read__ns1__LoginResponse
#define soap_read__ns1__LoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LoginResponse * SOAP_FMAC2 soap_instantiate__ns1__LoginResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LoginResponse * soap_new__ns1__LoginResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LoginResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LoginResponse * soap_new_req__ns1__LoginResponse(struct soap *soap) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LoginResponse * soap_new_set__ns1__LoginResponse(struct soap *soap, std::string *LoginResult) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginResponse::LoginResult = LoginResult; } return _p; }

inline void soap_delete__ns1__LoginResponse(struct soap *soap, _ns1__LoginResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LoginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Login
#define SOAP_TYPE__ns1__Login (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Login(struct soap*, const char*, int, const _ns1__Login *, const char*);
SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_in__ns1__Login(struct soap*, const char*, _ns1__Login *, const char*);

#ifndef soap_write__ns1__Login
#define soap_write__ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_get__ns1__Login(struct soap*, _ns1__Login *, const char*, const char*);

#ifndef soap_read__ns1__Login
#define soap_read__ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__Login * SOAP_FMAC2 soap_instantiate__ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Login * soap_new__ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Login(soap, n, NULL, NULL, NULL); }

inline _ns1__Login * soap_new_req__ns1__Login(struct soap *soap) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__Login * soap_new_set__ns1__Login(struct soap *soap, std::string *Email, std::string *Password) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Login::Email = Email; _p->_ns1__Login::Password = Password; } return _p; }

inline void soap_delete__ns1__Login(struct soap *soap, _ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__Logout
#define SOAP_TYPE___ns1__Logout (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Logout(struct soap*, struct __ns1__Logout *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Logout(struct soap*, const struct __ns1__Logout *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Logout(struct soap*, const char*, int, const struct __ns1__Logout *, const char*);
SOAP_FMAC3 struct __ns1__Logout * SOAP_FMAC4 soap_in___ns1__Logout(struct soap*, const char*, struct __ns1__Logout *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Logout(struct soap*, const struct __ns1__Logout *, const char*, const char*);

#ifndef soap_write___ns1__Logout
#define soap_write___ns1__Logout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Logout(soap, data),0) || soap_put___ns1__Logout(soap, data, "-ns1:Logout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Logout * SOAP_FMAC4 soap_get___ns1__Logout(struct soap*, struct __ns1__Logout *, const char*, const char*);

#ifndef soap_read___ns1__Logout
#define soap_read___ns1__Logout(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Logout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Logout * SOAP_FMAC2 soap_instantiate___ns1__Logout(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Logout * soap_new___ns1__Logout(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Logout(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Logout * soap_new_req___ns1__Logout(struct soap *soap) { struct __ns1__Logout *_p = soap_instantiate___ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Logout(soap, _p); } return _p; }

inline struct __ns1__Logout * soap_new_set___ns1__Logout(struct soap *soap, _ns1__Logout *ns1__Logout) { struct __ns1__Logout *_p = soap_instantiate___ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Logout(soap, _p); _p->ns1__Logout = ns1__Logout; } return _p; }

inline void soap_delete___ns1__Logout(struct soap *soap, struct __ns1__Logout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Logout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetGraph
#define SOAP_TYPE___ns1__GetGraph (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetGraph(struct soap*, struct __ns1__GetGraph *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetGraph(struct soap*, const struct __ns1__GetGraph *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetGraph(struct soap*, const char*, int, const struct __ns1__GetGraph *, const char*);
SOAP_FMAC3 struct __ns1__GetGraph * SOAP_FMAC4 soap_in___ns1__GetGraph(struct soap*, const char*, struct __ns1__GetGraph *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetGraph(struct soap*, const struct __ns1__GetGraph *, const char*, const char*);

#ifndef soap_write___ns1__GetGraph
#define soap_write___ns1__GetGraph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetGraph(soap, data),0) || soap_put___ns1__GetGraph(soap, data, "-ns1:GetGraph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetGraph * SOAP_FMAC4 soap_get___ns1__GetGraph(struct soap*, struct __ns1__GetGraph *, const char*, const char*);

#ifndef soap_read___ns1__GetGraph
#define soap_read___ns1__GetGraph(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetGraph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetGraph * SOAP_FMAC2 soap_instantiate___ns1__GetGraph(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetGraph * soap_new___ns1__GetGraph(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetGraph(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetGraph * soap_new_req___ns1__GetGraph(struct soap *soap) { struct __ns1__GetGraph *_p = soap_instantiate___ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetGraph(soap, _p); } return _p; }

inline struct __ns1__GetGraph * soap_new_set___ns1__GetGraph(struct soap *soap, _ns1__GetGraph *ns1__GetGraph) { struct __ns1__GetGraph *_p = soap_instantiate___ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetGraph(soap, _p); _p->ns1__GetGraph = ns1__GetGraph; } return _p; }

inline void soap_delete___ns1__GetGraph(struct soap *soap, struct __ns1__GetGraph *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetGraph(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Login(struct soap*, struct __ns1__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Login(struct soap*, const struct __ns1__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Login(struct soap*, const char*, int, const struct __ns1__Login *, const char*);
SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_in___ns1__Login(struct soap*, const char*, struct __ns1__Login *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Login(struct soap*, const struct __ns1__Login *, const char*, const char*);

#ifndef soap_write___ns1__Login
#define soap_write___ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Login(soap, data),0) || soap_put___ns1__Login(soap, data, "-ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_get___ns1__Login(struct soap*, struct __ns1__Login *, const char*, const char*);

#ifndef soap_read___ns1__Login
#define soap_read___ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Login * SOAP_FMAC2 soap_instantiate___ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Login * soap_new___ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Login(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Login * soap_new_req___ns1__Login(struct soap *soap) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); } return _p; }

inline struct __ns1__Login * soap_new_set___ns1__Login(struct soap *soap, _ns1__Login *ns1__Login) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); _p->ns1__Login = ns1__Login; } return _p; }

inline void soap_delete___ns1__Login(struct soap *soap, struct __ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, ns3__FaultException *ns3__FaultException_, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->ns3__FaultException_ = ns3__FaultException_; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ser__anyType
#define SOAP_TYPE___ser__anyType (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ser__anyType(struct soap*, struct __ser__anyType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ser__anyType(struct soap*, const struct __ser__anyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ser__anyType(struct soap*, const char*, int, const struct __ser__anyType *, const char*);
SOAP_FMAC3 struct __ser__anyType * SOAP_FMAC4 soap_in___ser__anyType(struct soap*, const char*, struct __ser__anyType *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ser__anyType(struct soap*, const struct __ser__anyType *, const char*, const char*);

#ifndef soap_write___ser__anyType
#define soap_write___ser__anyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ser__anyType(soap, data),0) || soap_put___ser__anyType(soap, data, "-ser:anyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ser__anyType * SOAP_FMAC4 soap_get___ser__anyType(struct soap*, struct __ser__anyType *, const char*, const char*);

#ifndef soap_read___ser__anyType
#define soap_read___ser__anyType(soap, data) ( soap_begin_recv(soap) || !soap_get___ser__anyType(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ser__anyType * SOAP_FMAC2 soap_instantiate___ser__anyType(struct soap*, int, const char*, const char*, size_t*);

inline struct __ser__anyType * soap_new___ser__anyType(struct soap *soap, int n = -1) { return soap_instantiate___ser__anyType(soap, n, NULL, NULL, NULL); }

inline struct __ser__anyType * soap_new_req___ser__anyType(struct soap *soap, int __type, void *ser__anyType) { struct __ser__anyType *_p = soap_instantiate___ser__anyType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ser__anyType(soap, _p); _p->__type = __type; _p->ser__anyType = ser__anyType; } return _p; }

inline struct __ser__anyType * soap_new_set___ser__anyType(struct soap *soap, int __type, void *ser__anyType) { struct __ser__anyType *_p = soap_instantiate___ser__anyType(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ser__anyType(soap, _p); _p->__type = __type; _p->ser__anyType = ser__anyType; } return _p; }

inline void soap_delete___ser__anyType(struct soap *soap, struct __ser__anyType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ser__anyType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__LogoutResponse
#define SOAP_TYPE_PointerTo_ns1__LogoutResponse (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__LogoutResponse(struct soap*, const char *, int, _ns1__LogoutResponse *const*, const char *);
SOAP_FMAC3 _ns1__LogoutResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__LogoutResponse(struct soap*, const char*, _ns1__LogoutResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__LogoutResponse
#define soap_write_PointerTo_ns1__LogoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__LogoutResponse(soap, data),0) || soap_put_PointerTo_ns1__LogoutResponse(soap, data, "ns1:LogoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LogoutResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__LogoutResponse
#define soap_read_PointerTo_ns1__LogoutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__LogoutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Logout
#define SOAP_TYPE_PointerTo_ns1__Logout (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Logout(struct soap*, _ns1__Logout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Logout(struct soap*, const char *, int, _ns1__Logout *const*, const char *);
SOAP_FMAC3 _ns1__Logout ** SOAP_FMAC4 soap_in_PointerTo_ns1__Logout(struct soap*, const char*, _ns1__Logout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Logout(struct soap*, _ns1__Logout *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Logout
#define soap_write_PointerTo_ns1__Logout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Logout(soap, data),0) || soap_put_PointerTo_ns1__Logout(soap, data, "ns1:Logout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Logout ** SOAP_FMAC4 soap_get_PointerTo_ns1__Logout(struct soap*, _ns1__Logout **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Logout
#define soap_read_PointerTo_ns1__Logout(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Logout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetGraphResponse
#define SOAP_TYPE_PointerTo_ns1__GetGraphResponse (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetGraphResponse(struct soap*, const char *, int, _ns1__GetGraphResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetGraphResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetGraphResponse(struct soap*, const char*, _ns1__GetGraphResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetGraphResponse
#define soap_write_PointerTo_ns1__GetGraphResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetGraphResponse(soap, data),0) || soap_put_PointerTo_ns1__GetGraphResponse(soap, data, "ns1:GetGraphResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraphResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetGraphResponse
#define soap_read_PointerTo_ns1__GetGraphResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetGraphResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetGraph
#define SOAP_TYPE_PointerTo_ns1__GetGraph (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetGraph(struct soap*, _ns1__GetGraph *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetGraph(struct soap*, const char *, int, _ns1__GetGraph *const*, const char *);
SOAP_FMAC3 _ns1__GetGraph ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetGraph(struct soap*, const char*, _ns1__GetGraph **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetGraph(struct soap*, _ns1__GetGraph *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetGraph
#define soap_write_PointerTo_ns1__GetGraph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetGraph(soap, data),0) || soap_put_PointerTo_ns1__GetGraph(soap, data, "ns1:GetGraph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraph ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetGraph(struct soap*, _ns1__GetGraph **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetGraph
#define soap_read_PointerTo_ns1__GetGraph(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetGraph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__LoginResponse
#define SOAP_TYPE_PointerTo_ns1__LoginResponse (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__LoginResponse(struct soap*, _ns1__LoginResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__LoginResponse(struct soap*, const char *, int, _ns1__LoginResponse *const*, const char *);
SOAP_FMAC3 _ns1__LoginResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__LoginResponse(struct soap*, const char*, _ns1__LoginResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__LoginResponse(struct soap*, _ns1__LoginResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__LoginResponse
#define soap_write_PointerTo_ns1__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__LoginResponse(soap, data),0) || soap_put_PointerTo_ns1__LoginResponse(soap, data, "ns1:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__LoginResponse(struct soap*, _ns1__LoginResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__LoginResponse
#define soap_read_PointerTo_ns1__LoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__LoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Login
#define SOAP_TYPE_PointerTo_ns1__Login (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Login(struct soap*, const char *, int, _ns1__Login *const*, const char *);
SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_in_PointerTo_ns1__Login(struct soap*, const char*, _ns1__Login **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Login
#define soap_write_PointerTo_ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Login(soap, data),0) || soap_put_PointerTo_ns1__Login(soap, data, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_get_PointerTo_ns1__Login(struct soap*, _ns1__Login **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Login
#define soap_read_PointerTo_ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__FaultException
#define SOAP_TYPE_PointerTons3__FaultException (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__FaultException(struct soap*, ns3__FaultException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__FaultException(struct soap*, const char *, int, ns3__FaultException *const*, const char *);
SOAP_FMAC3 ns3__FaultException ** SOAP_FMAC4 soap_in_PointerTons3__FaultException(struct soap*, const char*, ns3__FaultException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__FaultException(struct soap*, ns3__FaultException *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__FaultException
#define soap_write_PointerTons3__FaultException(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__FaultException(soap, data),0) || soap_put_PointerTons3__FaultException(soap, data, "ns3:FaultException", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__FaultException ** SOAP_FMAC4 soap_get_PointerTons3__FaultException(struct soap*, ns3__FaultException **, const char*, const char*);

#ifndef soap_read_PointerTons3__FaultException
#define soap_read_PointerTons3__FaultException(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__FaultException(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToarr__ArrayOfint
#define SOAP_TYPE_PointerToarr__ArrayOfint (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToarr__ArrayOfint(struct soap*, arr__ArrayOfint *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToarr__ArrayOfint(struct soap*, const char *, int, arr__ArrayOfint *const*, const char *);
SOAP_FMAC3 arr__ArrayOfint ** SOAP_FMAC4 soap_in_PointerToarr__ArrayOfint(struct soap*, const char*, arr__ArrayOfint **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToarr__ArrayOfint(struct soap*, arr__ArrayOfint *const*, const char*, const char*);

#ifndef soap_write_PointerToarr__ArrayOfint
#define soap_write_PointerToarr__ArrayOfint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToarr__ArrayOfint(soap, data),0) || soap_put_PointerToarr__ArrayOfint(soap, data, "arr:ArrayOfint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 arr__ArrayOfint ** SOAP_FMAC4 soap_get_PointerToarr__ArrayOfint(struct soap*, arr__ArrayOfint **, const char*, const char*);

#ifndef soap_read_PointerToarr__ArrayOfint
#define soap_read_PointerToarr__ArrayOfint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToarr__ArrayOfint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__User
#define SOAP_TYPE_PointerTons5__User (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__User(struct soap*, ns5__User *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__User(struct soap*, const char *, int, ns5__User *const*, const char *);
SOAP_FMAC3 ns5__User ** SOAP_FMAC4 soap_in_PointerTons5__User(struct soap*, const char*, ns5__User **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__User(struct soap*, ns5__User *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__User
#define soap_write_PointerTons5__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__User(soap, data),0) || soap_put_PointerTons5__User(soap, data, "ns5:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__User ** SOAP_FMAC4 soap_get_PointerTons5__User(struct soap*, ns5__User **, const char*, const char*);

#ifndef soap_read_PointerTons5__User
#define soap_read_PointerTons5__User(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__User(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__Relationship
#define SOAP_TYPE_PointerTons5__Relationship (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__Relationship(struct soap*, ns5__Relationship *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__Relationship(struct soap*, const char *, int, ns5__Relationship *const*, const char *);
SOAP_FMAC3 ns5__Relationship ** SOAP_FMAC4 soap_in_PointerTons5__Relationship(struct soap*, const char*, ns5__Relationship **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__Relationship(struct soap*, ns5__Relationship *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__Relationship
#define soap_write_PointerTons5__Relationship(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__Relationship(soap, data),0) || soap_put_PointerTons5__Relationship(soap, data, "ns5:Relationship", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__Relationship ** SOAP_FMAC4 soap_get_PointerTons5__Relationship(struct soap*, ns5__Relationship **, const char*, const char*);

#ifndef soap_read_PointerTons5__Relationship
#define soap_read_PointerTons5__Relationship(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__Relationship(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__RelationshipTag
#define SOAP_TYPE_PointerTons5__RelationshipTag (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__RelationshipTag(struct soap*, ns5__RelationshipTag *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__RelationshipTag(struct soap*, const char *, int, ns5__RelationshipTag *const*, const char *);
SOAP_FMAC3 ns5__RelationshipTag ** SOAP_FMAC4 soap_in_PointerTons5__RelationshipTag(struct soap*, const char*, ns5__RelationshipTag **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__RelationshipTag(struct soap*, ns5__RelationshipTag *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__RelationshipTag
#define soap_write_PointerTons5__RelationshipTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__RelationshipTag(soap, data),0) || soap_put_PointerTons5__RelationshipTag(soap, data, "ns5:RelationshipTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__RelationshipTag ** SOAP_FMAC4 soap_get_PointerTons5__RelationshipTag(struct soap*, ns5__RelationshipTag **, const char*, const char*);

#ifndef soap_read_PointerTons5__RelationshipTag
#define soap_read_PointerTons5__RelationshipTag(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__RelationshipTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__Interest
#define SOAP_TYPE_PointerTons5__Interest (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__Interest(struct soap*, ns5__Interest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__Interest(struct soap*, const char *, int, ns5__Interest *const*, const char *);
SOAP_FMAC3 ns5__Interest ** SOAP_FMAC4 soap_in_PointerTons5__Interest(struct soap*, const char*, ns5__Interest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__Interest(struct soap*, ns5__Interest *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__Interest
#define soap_write_PointerTons5__Interest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__Interest(soap, data),0) || soap_put_PointerTons5__Interest(soap, data, "ns5:Interest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__Interest ** SOAP_FMAC4 soap_get_PointerTons5__Interest(struct soap*, ns5__Interest **, const char*, const char*);

#ifndef soap_read_PointerTons5__Interest
#define soap_read_PointerTons5__Interest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__Interest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__HumourStatus
#define SOAP_TYPE_PointerTons5__HumourStatus (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__HumourStatus(struct soap*, ns5__HumourStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__HumourStatus(struct soap*, const char *, int, ns5__HumourStatus *const*, const char *);
SOAP_FMAC3 ns5__HumourStatus ** SOAP_FMAC4 soap_in_PointerTons5__HumourStatus(struct soap*, const char*, ns5__HumourStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__HumourStatus(struct soap*, ns5__HumourStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__HumourStatus
#define soap_write_PointerTons5__HumourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__HumourStatus(soap, data),0) || soap_put_PointerTons5__HumourStatus(soap, data, "ns5:HumourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__HumourStatus ** SOAP_FMAC4 soap_get_PointerTons5__HumourStatus(struct soap*, ns5__HumourStatus **, const char*, const char*);

#ifndef soap_read_PointerTons5__HumourStatus
#define soap_read_PointerTons5__HumourStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__HumourStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfUser
#define SOAP_TYPE_PointerTons5__ArrayOfUser (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfUser(struct soap*, ns5__ArrayOfUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfUser(struct soap*, const char *, int, ns5__ArrayOfUser *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfUser ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfUser(struct soap*, const char*, ns5__ArrayOfUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfUser(struct soap*, ns5__ArrayOfUser *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfUser
#define soap_write_PointerTons5__ArrayOfUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfUser(soap, data),0) || soap_put_PointerTons5__ArrayOfUser(soap, data, "ns5:ArrayOfUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfUser ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfUser(struct soap*, ns5__ArrayOfUser **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfUser
#define soap_read_PointerTons5__ArrayOfUser(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfUser(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfRelationship
#define SOAP_TYPE_PointerTons5__ArrayOfRelationship (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfRelationship(struct soap*, ns5__ArrayOfRelationship *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfRelationship(struct soap*, const char *, int, ns5__ArrayOfRelationship *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfRelationship ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfRelationship(struct soap*, const char*, ns5__ArrayOfRelationship **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfRelationship(struct soap*, ns5__ArrayOfRelationship *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfRelationship
#define soap_write_PointerTons5__ArrayOfRelationship(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfRelationship(soap, data),0) || soap_put_PointerTons5__ArrayOfRelationship(soap, data, "ns5:ArrayOfRelationship", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfRelationship ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfRelationship(struct soap*, ns5__ArrayOfRelationship **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfRelationship
#define soap_read_PointerTons5__ArrayOfRelationship(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfRelationship(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfRelationshipTag
#define SOAP_TYPE_PointerTons5__ArrayOfRelationshipTag (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfRelationshipTag(struct soap*, ns5__ArrayOfRelationshipTag *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfRelationshipTag(struct soap*, const char *, int, ns5__ArrayOfRelationshipTag *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfRelationshipTag ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfRelationshipTag(struct soap*, const char*, ns5__ArrayOfRelationshipTag **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfRelationshipTag(struct soap*, ns5__ArrayOfRelationshipTag *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfRelationshipTag
#define soap_write_PointerTons5__ArrayOfRelationshipTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfRelationshipTag(soap, data),0) || soap_put_PointerTons5__ArrayOfRelationshipTag(soap, data, "ns5:ArrayOfRelationshipTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfRelationshipTag ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfRelationshipTag(struct soap*, ns5__ArrayOfRelationshipTag **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfRelationshipTag
#define soap_read_PointerTons5__ArrayOfRelationshipTag(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfRelationshipTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfInterest
#define SOAP_TYPE_PointerTons5__ArrayOfInterest (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfInterest(struct soap*, ns5__ArrayOfInterest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfInterest(struct soap*, const char *, int, ns5__ArrayOfInterest *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfInterest ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfInterest(struct soap*, const char*, ns5__ArrayOfInterest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfInterest(struct soap*, ns5__ArrayOfInterest *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfInterest
#define soap_write_PointerTons5__ArrayOfInterest(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfInterest(soap, data),0) || soap_put_PointerTons5__ArrayOfInterest(soap, data, "ns5:ArrayOfInterest", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfInterest ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfInterest(struct soap*, ns5__ArrayOfInterest **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfInterest
#define soap_read_PointerTons5__ArrayOfInterest(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfInterest(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__ArrayOfHumourStatus
#define SOAP_TYPE_PointerTons5__ArrayOfHumourStatus (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__ArrayOfHumourStatus(struct soap*, ns5__ArrayOfHumourStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__ArrayOfHumourStatus(struct soap*, const char *, int, ns5__ArrayOfHumourStatus *const*, const char *);
SOAP_FMAC3 ns5__ArrayOfHumourStatus ** SOAP_FMAC4 soap_in_PointerTons5__ArrayOfHumourStatus(struct soap*, const char*, ns5__ArrayOfHumourStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__ArrayOfHumourStatus(struct soap*, ns5__ArrayOfHumourStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__ArrayOfHumourStatus
#define soap_write_PointerTons5__ArrayOfHumourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__ArrayOfHumourStatus(soap, data),0) || soap_put_PointerTons5__ArrayOfHumourStatus(soap, data, "ns5:ArrayOfHumourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__ArrayOfHumourStatus ** SOAP_FMAC4 soap_get_PointerTons5__ArrayOfHumourStatus(struct soap*, ns5__ArrayOfHumourStatus **, const char*, const char*);

#ifndef soap_read_PointerTons5__ArrayOfHumourStatus
#define soap_read_PointerTons5__ArrayOfHumourStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__ArrayOfHumourStatus(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__FaultException_x002eFaultReasonData
#define SOAP_TYPE_PointerTons3__FaultException_x002eFaultReasonData (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__FaultException_x002eFaultReasonData(struct soap*, ns3__FaultException_x002eFaultReasonData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__FaultException_x002eFaultReasonData(struct soap*, const char *, int, ns3__FaultException_x002eFaultReasonData *const*, const char *);
SOAP_FMAC3 ns3__FaultException_x002eFaultReasonData ** SOAP_FMAC4 soap_in_PointerTons3__FaultException_x002eFaultReasonData(struct soap*, const char*, ns3__FaultException_x002eFaultReasonData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__FaultException_x002eFaultReasonData(struct soap*, ns3__FaultException_x002eFaultReasonData *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__FaultException_x002eFaultReasonData
#define soap_write_PointerTons3__FaultException_x002eFaultReasonData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__FaultException_x002eFaultReasonData(soap, data),0) || soap_put_PointerTons3__FaultException_x002eFaultReasonData(soap, data, "ns3:FaultException.FaultReasonData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__FaultException_x002eFaultReasonData ** SOAP_FMAC4 soap_get_PointerTons3__FaultException_x002eFaultReasonData(struct soap*, ns3__FaultException_x002eFaultReasonData **, const char*, const char*);

#ifndef soap_read_PointerTons3__FaultException_x002eFaultReasonData
#define soap_read_PointerTons3__FaultException_x002eFaultReasonData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__FaultException_x002eFaultReasonData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__FaultException_x002eFaultCodeData
#define SOAP_TYPE_PointerTons3__FaultException_x002eFaultCodeData (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__FaultException_x002eFaultCodeData(struct soap*, ns3__FaultException_x002eFaultCodeData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__FaultException_x002eFaultCodeData(struct soap*, const char *, int, ns3__FaultException_x002eFaultCodeData *const*, const char *);
SOAP_FMAC3 ns3__FaultException_x002eFaultCodeData ** SOAP_FMAC4 soap_in_PointerTons3__FaultException_x002eFaultCodeData(struct soap*, const char*, ns3__FaultException_x002eFaultCodeData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__FaultException_x002eFaultCodeData(struct soap*, ns3__FaultException_x002eFaultCodeData *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__FaultException_x002eFaultCodeData
#define soap_write_PointerTons3__FaultException_x002eFaultCodeData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__FaultException_x002eFaultCodeData(soap, data),0) || soap_put_PointerTons3__FaultException_x002eFaultCodeData(soap, data, "ns3:FaultException.FaultCodeData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__FaultException_x002eFaultCodeData ** SOAP_FMAC4 soap_get_PointerTons3__FaultException_x002eFaultCodeData(struct soap*, ns3__FaultException_x002eFaultCodeData **, const char*, const char*);

#ifndef soap_read_PointerTons3__FaultException_x002eFaultCodeData
#define soap_read_PointerTons3__FaultException_x002eFaultCodeData(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__FaultException_x002eFaultCodeData(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons5__Graph
#define SOAP_TYPE_PointerTons5__Graph (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons5__Graph(struct soap*, ns5__Graph *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons5__Graph(struct soap*, const char *, int, ns5__Graph *const*, const char *);
SOAP_FMAC3 ns5__Graph ** SOAP_FMAC4 soap_in_PointerTons5__Graph(struct soap*, const char*, ns5__Graph **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons5__Graph(struct soap*, ns5__Graph *const*, const char*, const char*);

#ifndef soap_write_PointerTons5__Graph
#define soap_write_PointerTons5__Graph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons5__Graph(soap, data),0) || soap_put_PointerTons5__Graph(soap, data, "ns5:Graph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns5__Graph ** SOAP_FMAC4 soap_get_PointerTons5__Graph(struct soap*, ns5__Graph **, const char*, const char*);

#ifndef soap_read_PointerTons5__Graph
#define soap_read_PointerTons5__Graph(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons5__Graph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data),0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);
SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<int > * soap_new_std__vectorTemplateOfint(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfint(struct soap *soap, std::vector<int >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__User
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__User (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__User(struct soap*, std::vector<ns5__User * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__User(struct soap*, const std::vector<ns5__User * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__User(struct soap*, const char*, int, const std::vector<ns5__User * >*, const char*);
SOAP_FMAC3 std::vector<ns5__User * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__User(struct soap*, const char*, std::vector<ns5__User * >*, const char*);
SOAP_FMAC1 std::vector<ns5__User * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__User(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__User * > * soap_new_std__vectorTemplateOfPointerTons5__User(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__User(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__User(struct soap *soap, std::vector<ns5__User * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__User(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__Relationship
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__Relationship (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__Relationship(struct soap*, std::vector<ns5__Relationship * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__Relationship(struct soap*, const std::vector<ns5__Relationship * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__Relationship(struct soap*, const char*, int, const std::vector<ns5__Relationship * >*, const char*);
SOAP_FMAC3 std::vector<ns5__Relationship * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__Relationship(struct soap*, const char*, std::vector<ns5__Relationship * >*, const char*);
SOAP_FMAC1 std::vector<ns5__Relationship * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__Relationship(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__Relationship * > * soap_new_std__vectorTemplateOfPointerTons5__Relationship(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__Relationship(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__Relationship(struct soap *soap, std::vector<ns5__Relationship * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__Relationship(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__RelationshipTag
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__RelationshipTag (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap*, std::vector<ns5__RelationshipTag * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap*, const std::vector<ns5__RelationshipTag * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap*, const char*, int, const std::vector<ns5__RelationshipTag * >*, const char*);
SOAP_FMAC3 std::vector<ns5__RelationshipTag * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap*, const char*, std::vector<ns5__RelationshipTag * >*, const char*);
SOAP_FMAC1 std::vector<ns5__RelationshipTag * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__RelationshipTag * > * soap_new_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__RelationshipTag(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap *soap, std::vector<ns5__RelationshipTag * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__RelationshipTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__Interest
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__Interest (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__Interest(struct soap*, std::vector<ns5__Interest * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__Interest(struct soap*, const std::vector<ns5__Interest * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__Interest(struct soap*, const char*, int, const std::vector<ns5__Interest * >*, const char*);
SOAP_FMAC3 std::vector<ns5__Interest * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__Interest(struct soap*, const char*, std::vector<ns5__Interest * >*, const char*);
SOAP_FMAC1 std::vector<ns5__Interest * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__Interest(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__Interest * > * soap_new_std__vectorTemplateOfPointerTons5__Interest(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__Interest(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__Interest(struct soap *soap, std::vector<ns5__Interest * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__Interest(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons5__HumourStatus
#define SOAP_TYPE_std__vectorTemplateOfPointerTons5__HumourStatus (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap*, std::vector<ns5__HumourStatus * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap*, const std::vector<ns5__HumourStatus * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap*, const char*, int, const std::vector<ns5__HumourStatus * >*, const char*);
SOAP_FMAC3 std::vector<ns5__HumourStatus * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap*, const char*, std::vector<ns5__HumourStatus * >*, const char*);
SOAP_FMAC1 std::vector<ns5__HumourStatus * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns5__HumourStatus * > * soap_new_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons5__HumourStatus(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap *soap, std::vector<ns5__HumourStatus * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons5__HumourStatus(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_XML
#define SOAP_TYPE_std__vectorTemplateOf_XML (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_XML(struct soap*, std::vector<char * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_XML(struct soap*, const std::vector<char * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_XML(struct soap*, const char*, int, const std::vector<char * >*, const char*);
SOAP_FMAC3 std::vector<char * >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_XML(struct soap*, const char*, std::vector<char * >*, const char*);
SOAP_FMAC1 std::vector<char * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_XML(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<char * > * soap_new_std__vectorTemplateOf_XML(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_XML(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_XML(struct soap *soap, std::vector<char * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_XML(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData
#define SOAP_TYPE_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap*, std::vector<ns3__FaultException_x002eFaultReasonData * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap*, const std::vector<ns3__FaultException_x002eFaultReasonData * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap*, const char*, int, const std::vector<ns3__FaultException_x002eFaultReasonData * >*, const char*);
SOAP_FMAC3 std::vector<ns3__FaultException_x002eFaultReasonData * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap*, const char*, std::vector<ns3__FaultException_x002eFaultReasonData * >*, const char*);
SOAP_FMAC1 std::vector<ns3__FaultException_x002eFaultReasonData * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__FaultException_x002eFaultReasonData * > * soap_new_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap *soap, std::vector<ns3__FaultException_x002eFaultReasonData * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultReasonData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData
#define SOAP_TYPE_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap*, std::vector<ns3__FaultException_x002eFaultCodeData * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap*, const std::vector<ns3__FaultException_x002eFaultCodeData * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap*, const char*, int, const std::vector<ns3__FaultException_x002eFaultCodeData * >*, const char*);
SOAP_FMAC3 std::vector<ns3__FaultException_x002eFaultCodeData * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap*, const char*, std::vector<ns3__FaultException_x002eFaultCodeData * >*, const char*);
SOAP_FMAC1 std::vector<ns3__FaultException_x002eFaultCodeData * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__FaultException_x002eFaultCodeData * > * soap_new_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap *soap, std::vector<ns3__FaultException_x002eFaultCodeData * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons3__FaultException_x002eFaultCodeData(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
