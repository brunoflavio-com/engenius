/* soapH.h
   Generated by gSOAP 2.8.17 from stub/Service1.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__string(soap, data),0) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__UserTag
#define SOAP_TYPE_ns3__UserTag (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__UserTag(struct soap*, const char*, int, const ns3__UserTag *, const char*);
SOAP_FMAC3 ns3__UserTag * SOAP_FMAC4 soap_in_ns3__UserTag(struct soap*, const char*, ns3__UserTag *, const char*);

#ifndef soap_write_ns3__UserTag
#define soap_write_ns3__UserTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:UserTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__UserTag * SOAP_FMAC4 soap_get_ns3__UserTag(struct soap*, ns3__UserTag *, const char*, const char*);

#ifndef soap_read_ns3__UserTag
#define soap_read_ns3__UserTag(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__UserTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__UserTag * SOAP_FMAC2 soap_instantiate_ns3__UserTag(struct soap*, int, const char*, const char*, size_t*);

inline ns3__UserTag * soap_new_ns3__UserTag(struct soap *soap, int n = -1) { return soap_instantiate_ns3__UserTag(soap, n, NULL, NULL, NULL); }

inline ns3__UserTag * soap_new_req_ns3__UserTag(struct soap *soap) { ns3__UserTag *_p = soap_instantiate_ns3__UserTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__UserTag * soap_new_set_ns3__UserTag(struct soap *soap, std::string *UserTagName) { ns3__UserTag *_p = soap_instantiate_ns3__UserTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__UserTag::UserTagName = UserTagName; } return _p; }

inline void soap_delete_ns3__UserTag(struct soap *soap, ns3__UserTag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__UserTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__ArrayOfUserTag
#define SOAP_TYPE_ns3__ArrayOfUserTag (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ArrayOfUserTag(struct soap*, const char*, int, const ns3__ArrayOfUserTag *, const char*);
SOAP_FMAC3 ns3__ArrayOfUserTag * SOAP_FMAC4 soap_in_ns3__ArrayOfUserTag(struct soap*, const char*, ns3__ArrayOfUserTag *, const char*);

#ifndef soap_write_ns3__ArrayOfUserTag
#define soap_write_ns3__ArrayOfUserTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:ArrayOfUserTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ArrayOfUserTag * SOAP_FMAC4 soap_get_ns3__ArrayOfUserTag(struct soap*, ns3__ArrayOfUserTag *, const char*, const char*);

#ifndef soap_read_ns3__ArrayOfUserTag
#define soap_read_ns3__ArrayOfUserTag(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__ArrayOfUserTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__ArrayOfUserTag * SOAP_FMAC2 soap_instantiate_ns3__ArrayOfUserTag(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ArrayOfUserTag * soap_new_ns3__ArrayOfUserTag(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ArrayOfUserTag(soap, n, NULL, NULL, NULL); }

inline ns3__ArrayOfUserTag * soap_new_req_ns3__ArrayOfUserTag(struct soap *soap) { ns3__ArrayOfUserTag *_p = soap_instantiate_ns3__ArrayOfUserTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__ArrayOfUserTag * soap_new_set_ns3__ArrayOfUserTag(struct soap *soap, std::vector<ns3__UserTag * >& UserTag) { ns3__ArrayOfUserTag *_p = soap_instantiate_ns3__ArrayOfUserTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__ArrayOfUserTag::UserTag = UserTag; } return _p; }

inline void soap_delete_ns3__ArrayOfUserTag(struct soap *soap, ns3__ArrayOfUserTag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__ArrayOfUserTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__ConnectionTag
#define SOAP_TYPE_ns3__ConnectionTag (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ConnectionTag(struct soap*, const char*, int, const ns3__ConnectionTag *, const char*);
SOAP_FMAC3 ns3__ConnectionTag * SOAP_FMAC4 soap_in_ns3__ConnectionTag(struct soap*, const char*, ns3__ConnectionTag *, const char*);

#ifndef soap_write_ns3__ConnectionTag
#define soap_write_ns3__ConnectionTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:ConnectionTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ConnectionTag * SOAP_FMAC4 soap_get_ns3__ConnectionTag(struct soap*, ns3__ConnectionTag *, const char*, const char*);

#ifndef soap_read_ns3__ConnectionTag
#define soap_read_ns3__ConnectionTag(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__ConnectionTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__ConnectionTag * SOAP_FMAC2 soap_instantiate_ns3__ConnectionTag(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ConnectionTag * soap_new_ns3__ConnectionTag(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ConnectionTag(soap, n, NULL, NULL, NULL); }

inline ns3__ConnectionTag * soap_new_req_ns3__ConnectionTag(struct soap *soap) { ns3__ConnectionTag *_p = soap_instantiate_ns3__ConnectionTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__ConnectionTag * soap_new_set_ns3__ConnectionTag(struct soap *soap, std::string *ConnectionTagName) { ns3__ConnectionTag *_p = soap_instantiate_ns3__ConnectionTag(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__ConnectionTag::ConnectionTagName = ConnectionTagName; } return _p; }

inline void soap_delete_ns3__ConnectionTag(struct soap *soap, ns3__ConnectionTag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__ConnectionTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__Connection
#define SOAP_TYPE_ns3__Connection (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__Connection(struct soap*, const char*, int, const ns3__Connection *, const char*);
SOAP_FMAC3 ns3__Connection * SOAP_FMAC4 soap_in_ns3__Connection(struct soap*, const char*, ns3__Connection *, const char*);

#ifndef soap_write_ns3__Connection
#define soap_write_ns3__Connection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:Connection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__Connection * SOAP_FMAC4 soap_get_ns3__Connection(struct soap*, ns3__Connection *, const char*, const char*);

#ifndef soap_read_ns3__Connection
#define soap_read_ns3__Connection(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__Connection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__Connection * SOAP_FMAC2 soap_instantiate_ns3__Connection(struct soap*, int, const char*, const char*, size_t*);

inline ns3__Connection * soap_new_ns3__Connection(struct soap *soap, int n = -1) { return soap_instantiate_ns3__Connection(soap, n, NULL, NULL, NULL); }

inline ns3__Connection * soap_new_req_ns3__Connection(struct soap *soap) { ns3__Connection *_p = soap_instantiate_ns3__Connection(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__Connection * soap_new_set_ns3__Connection(struct soap *soap, ns3__ConnectionTag *ConnectionTag, ns3__User *User, int *strength) { ns3__Connection *_p = soap_instantiate_ns3__Connection(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__Connection::ConnectionTag = ConnectionTag; _p->ns3__Connection::User = User; _p->ns3__Connection::strength = strength; } return _p; }

inline void soap_delete_ns3__Connection(struct soap *soap, ns3__Connection *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__Connection(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__ArrayOfConnection
#define SOAP_TYPE_ns3__ArrayOfConnection (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__ArrayOfConnection(struct soap*, const char*, int, const ns3__ArrayOfConnection *, const char*);
SOAP_FMAC3 ns3__ArrayOfConnection * SOAP_FMAC4 soap_in_ns3__ArrayOfConnection(struct soap*, const char*, ns3__ArrayOfConnection *, const char*);

#ifndef soap_write_ns3__ArrayOfConnection
#define soap_write_ns3__ArrayOfConnection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:ArrayOfConnection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ArrayOfConnection * SOAP_FMAC4 soap_get_ns3__ArrayOfConnection(struct soap*, ns3__ArrayOfConnection *, const char*, const char*);

#ifndef soap_read_ns3__ArrayOfConnection
#define soap_read_ns3__ArrayOfConnection(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__ArrayOfConnection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__ArrayOfConnection * SOAP_FMAC2 soap_instantiate_ns3__ArrayOfConnection(struct soap*, int, const char*, const char*, size_t*);

inline ns3__ArrayOfConnection * soap_new_ns3__ArrayOfConnection(struct soap *soap, int n = -1) { return soap_instantiate_ns3__ArrayOfConnection(soap, n, NULL, NULL, NULL); }

inline ns3__ArrayOfConnection * soap_new_req_ns3__ArrayOfConnection(struct soap *soap) { ns3__ArrayOfConnection *_p = soap_instantiate_ns3__ArrayOfConnection(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__ArrayOfConnection * soap_new_set_ns3__ArrayOfConnection(struct soap *soap, std::vector<ns3__Connection * >& Connection) { ns3__ArrayOfConnection *_p = soap_instantiate_ns3__ArrayOfConnection(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__ArrayOfConnection::Connection = Connection; } return _p; }

inline void soap_delete_ns3__ArrayOfConnection(struct soap *soap, ns3__ArrayOfConnection *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__ArrayOfConnection(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns3__User
#define SOAP_TYPE_ns3__User (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__User(struct soap*, const char*, int, const ns3__User *, const char*);
SOAP_FMAC3 ns3__User * SOAP_FMAC4 soap_in_ns3__User(struct soap*, const char*, ns3__User *, const char*);

#ifndef soap_write_ns3__User
#define soap_write_ns3__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns3:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__User * SOAP_FMAC4 soap_get_ns3__User(struct soap*, ns3__User *, const char*, const char*);

#ifndef soap_read_ns3__User
#define soap_read_ns3__User(soap, data) ( soap_begin_recv(soap) || !soap_get_ns3__User(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 ns3__User * SOAP_FMAC2 soap_instantiate_ns3__User(struct soap*, int, const char*, const char*, size_t*);

inline ns3__User * soap_new_ns3__User(struct soap *soap, int n = -1) { return soap_instantiate_ns3__User(soap, n, NULL, NULL, NULL); }

inline ns3__User * soap_new_req_ns3__User(struct soap *soap) { ns3__User *_p = soap_instantiate_ns3__User(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns3__User * soap_new_set_ns3__User(struct soap *soap, ns3__ArrayOfConnection *Connections, ns3__ArrayOfUserTag *UserTags, std::string *Username) { ns3__User *_p = soap_instantiate_ns3__User(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns3__User::Connections = Connections; _p->ns3__User::UserTags = UserTags; _p->ns3__User::Username = Username; } return _p; }

inline void soap_delete_ns3__User(struct soap *soap, ns3__User *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__User(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LogoutResponse
#define SOAP_TYPE__ns1__LogoutResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LogoutResponse(struct soap*, const char*, int, const _ns1__LogoutResponse *, const char*);
SOAP_FMAC3 _ns1__LogoutResponse * SOAP_FMAC4 soap_in__ns1__LogoutResponse(struct soap*, const char*, _ns1__LogoutResponse *, const char*);

#ifndef soap_write__ns1__LogoutResponse
#define soap_write__ns1__LogoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LogoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LogoutResponse * SOAP_FMAC4 soap_get__ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse *, const char*, const char*);

#ifndef soap_read__ns1__LogoutResponse
#define soap_read__ns1__LogoutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LogoutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LogoutResponse * SOAP_FMAC2 soap_instantiate__ns1__LogoutResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LogoutResponse * soap_new__ns1__LogoutResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LogoutResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LogoutResponse * soap_new_req__ns1__LogoutResponse(struct soap *soap) { _ns1__LogoutResponse *_p = soap_instantiate__ns1__LogoutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LogoutResponse * soap_new_set__ns1__LogoutResponse(struct soap *soap) { _ns1__LogoutResponse *_p = soap_instantiate__ns1__LogoutResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1__LogoutResponse(struct soap *soap, _ns1__LogoutResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LogoutResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Logout
#define SOAP_TYPE__ns1__Logout (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Logout(struct soap*, const char*, int, const _ns1__Logout *, const char*);
SOAP_FMAC3 _ns1__Logout * SOAP_FMAC4 soap_in__ns1__Logout(struct soap*, const char*, _ns1__Logout *, const char*);

#ifndef soap_write__ns1__Logout
#define soap_write__ns1__Logout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:Logout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Logout * SOAP_FMAC4 soap_get__ns1__Logout(struct soap*, _ns1__Logout *, const char*, const char*);

#ifndef soap_read__ns1__Logout
#define soap_read__ns1__Logout(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Logout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__Logout * SOAP_FMAC2 soap_instantiate__ns1__Logout(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Logout * soap_new__ns1__Logout(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Logout(soap, n, NULL, NULL, NULL); }

inline _ns1__Logout * soap_new_req__ns1__Logout(struct soap *soap) { _ns1__Logout *_p = soap_instantiate__ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__Logout * soap_new_set__ns1__Logout(struct soap *soap, std::string *Token) { _ns1__Logout *_p = soap_instantiate__ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Logout::Token = Token; } return _p; }

inline void soap_delete__ns1__Logout(struct soap *soap, _ns1__Logout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Logout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetGraphResponse
#define SOAP_TYPE__ns1__GetGraphResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGraphResponse(struct soap*, const char*, int, const _ns1__GetGraphResponse *, const char*);
SOAP_FMAC3 _ns1__GetGraphResponse * SOAP_FMAC4 soap_in__ns1__GetGraphResponse(struct soap*, const char*, _ns1__GetGraphResponse *, const char*);

#ifndef soap_write__ns1__GetGraphResponse
#define soap_write__ns1__GetGraphResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetGraphResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraphResponse * SOAP_FMAC4 soap_get__ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetGraphResponse
#define soap_read__ns1__GetGraphResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetGraphResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetGraphResponse * SOAP_FMAC2 soap_instantiate__ns1__GetGraphResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGraphResponse * soap_new__ns1__GetGraphResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetGraphResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetGraphResponse * soap_new_req__ns1__GetGraphResponse(struct soap *soap) { _ns1__GetGraphResponse *_p = soap_instantiate__ns1__GetGraphResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetGraphResponse * soap_new_set__ns1__GetGraphResponse(struct soap *soap, ns3__User *GetGraphResult) { _ns1__GetGraphResponse *_p = soap_instantiate__ns1__GetGraphResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetGraphResponse::GetGraphResult = GetGraphResult; } return _p; }

inline void soap_delete__ns1__GetGraphResponse(struct soap *soap, _ns1__GetGraphResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetGraphResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetGraph
#define SOAP_TYPE__ns1__GetGraph (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetGraph(struct soap*, const char*, int, const _ns1__GetGraph *, const char*);
SOAP_FMAC3 _ns1__GetGraph * SOAP_FMAC4 soap_in__ns1__GetGraph(struct soap*, const char*, _ns1__GetGraph *, const char*);

#ifndef soap_write__ns1__GetGraph
#define soap_write__ns1__GetGraph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:GetGraph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraph * SOAP_FMAC4 soap_get__ns1__GetGraph(struct soap*, _ns1__GetGraph *, const char*, const char*);

#ifndef soap_read__ns1__GetGraph
#define soap_read__ns1__GetGraph(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetGraph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__GetGraph * SOAP_FMAC2 soap_instantiate__ns1__GetGraph(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetGraph * soap_new__ns1__GetGraph(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetGraph(soap, n, NULL, NULL, NULL); }

inline _ns1__GetGraph * soap_new_req__ns1__GetGraph(struct soap *soap) { _ns1__GetGraph *_p = soap_instantiate__ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetGraph * soap_new_set__ns1__GetGraph(struct soap *soap, std::string *Token, std::string *Email, int *graphDepth) { _ns1__GetGraph *_p = soap_instantiate__ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetGraph::Token = Token; _p->_ns1__GetGraph::Email = Email; _p->_ns1__GetGraph::graphDepth = graphDepth; } return _p; }

inline void soap_delete__ns1__GetGraph(struct soap *soap, _ns1__GetGraph *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetGraph(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__LoginResponse
#define SOAP_TYPE__ns1__LoginResponse (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__LoginResponse(struct soap*, const char*, int, const _ns1__LoginResponse *, const char*);
SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_in__ns1__LoginResponse(struct soap*, const char*, _ns1__LoginResponse *, const char*);

#ifndef soap_write__ns1__LoginResponse
#define soap_write__ns1__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginResponse * SOAP_FMAC4 soap_get__ns1__LoginResponse(struct soap*, _ns1__LoginResponse *, const char*, const char*);

#ifndef soap_read__ns1__LoginResponse
#define soap_read__ns1__LoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__LoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__LoginResponse * SOAP_FMAC2 soap_instantiate__ns1__LoginResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__LoginResponse * soap_new__ns1__LoginResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__LoginResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__LoginResponse * soap_new_req__ns1__LoginResponse(struct soap *soap) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__LoginResponse * soap_new_set__ns1__LoginResponse(struct soap *soap, std::string *LoginResult) { _ns1__LoginResponse *_p = soap_instantiate__ns1__LoginResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__LoginResponse::LoginResult = LoginResult; } return _p; }

inline void soap_delete__ns1__LoginResponse(struct soap *soap, _ns1__LoginResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__LoginResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Login
#define SOAP_TYPE__ns1__Login (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Login(struct soap*, const char*, int, const _ns1__Login *, const char*);
SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_in__ns1__Login(struct soap*, const char*, _ns1__Login *, const char*);

#ifndef soap_write__ns1__Login
#define soap_write__ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap),0) || (data)->soap_put(soap, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login * SOAP_FMAC4 soap_get__ns1__Login(struct soap*, _ns1__Login *, const char*, const char*);

#ifndef soap_read__ns1__Login
#define soap_read__ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 _ns1__Login * SOAP_FMAC2 soap_instantiate__ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Login * soap_new__ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Login(soap, n, NULL, NULL, NULL); }

inline _ns1__Login * soap_new_req__ns1__Login(struct soap *soap) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__Login * soap_new_set__ns1__Login(struct soap *soap, std::string *Email, std::string *Password) { _ns1__Login *_p = soap_instantiate__ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Login::Email = Email; _p->_ns1__Login::Password = Password; } return _p; }

inline void soap_delete__ns1__Login(struct soap *soap, _ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__Logout
#define SOAP_TYPE___ns1__Logout (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Logout(struct soap*, struct __ns1__Logout *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Logout(struct soap*, const struct __ns1__Logout *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Logout(struct soap*, const char*, int, const struct __ns1__Logout *, const char*);
SOAP_FMAC3 struct __ns1__Logout * SOAP_FMAC4 soap_in___ns1__Logout(struct soap*, const char*, struct __ns1__Logout *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Logout(struct soap*, const struct __ns1__Logout *, const char*, const char*);

#ifndef soap_write___ns1__Logout
#define soap_write___ns1__Logout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Logout(soap, data),0) || soap_put___ns1__Logout(soap, data, "-ns1:Logout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Logout * SOAP_FMAC4 soap_get___ns1__Logout(struct soap*, struct __ns1__Logout *, const char*, const char*);

#ifndef soap_read___ns1__Logout
#define soap_read___ns1__Logout(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Logout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Logout * SOAP_FMAC2 soap_instantiate___ns1__Logout(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Logout * soap_new___ns1__Logout(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Logout(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Logout * soap_new_req___ns1__Logout(struct soap *soap) { struct __ns1__Logout *_p = soap_instantiate___ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Logout(soap, _p); } return _p; }

inline struct __ns1__Logout * soap_new_set___ns1__Logout(struct soap *soap, _ns1__Logout *ns1__Logout) { struct __ns1__Logout *_p = soap_instantiate___ns1__Logout(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Logout(soap, _p); _p->ns1__Logout = ns1__Logout; } return _p; }

inline void soap_delete___ns1__Logout(struct soap *soap, struct __ns1__Logout *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Logout(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetGraph
#define SOAP_TYPE___ns1__GetGraph (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetGraph(struct soap*, struct __ns1__GetGraph *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetGraph(struct soap*, const struct __ns1__GetGraph *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetGraph(struct soap*, const char*, int, const struct __ns1__GetGraph *, const char*);
SOAP_FMAC3 struct __ns1__GetGraph * SOAP_FMAC4 soap_in___ns1__GetGraph(struct soap*, const char*, struct __ns1__GetGraph *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetGraph(struct soap*, const struct __ns1__GetGraph *, const char*, const char*);

#ifndef soap_write___ns1__GetGraph
#define soap_write___ns1__GetGraph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__GetGraph(soap, data),0) || soap_put___ns1__GetGraph(soap, data, "-ns1:GetGraph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__GetGraph * SOAP_FMAC4 soap_get___ns1__GetGraph(struct soap*, struct __ns1__GetGraph *, const char*, const char*);

#ifndef soap_read___ns1__GetGraph
#define soap_read___ns1__GetGraph(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetGraph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__GetGraph * SOAP_FMAC2 soap_instantiate___ns1__GetGraph(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetGraph * soap_new___ns1__GetGraph(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetGraph(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetGraph * soap_new_req___ns1__GetGraph(struct soap *soap) { struct __ns1__GetGraph *_p = soap_instantiate___ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetGraph(soap, _p); } return _p; }

inline struct __ns1__GetGraph * soap_new_set___ns1__GetGraph(struct soap *soap, _ns1__GetGraph *ns1__GetGraph) { struct __ns1__GetGraph *_p = soap_instantiate___ns1__GetGraph(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetGraph(soap, _p); _p->ns1__GetGraph = ns1__GetGraph; } return _p; }

inline void soap_delete___ns1__GetGraph(struct soap *soap, struct __ns1__GetGraph *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetGraph(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Login
#define SOAP_TYPE___ns1__Login (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Login(struct soap*, struct __ns1__Login *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Login(struct soap*, const struct __ns1__Login *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Login(struct soap*, const char*, int, const struct __ns1__Login *, const char*);
SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_in___ns1__Login(struct soap*, const char*, struct __ns1__Login *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Login(struct soap*, const struct __ns1__Login *, const char*, const char*);

#ifndef soap_write___ns1__Login
#define soap_write___ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___ns1__Login(soap, data),0) || soap_put___ns1__Login(soap, data, "-ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __ns1__Login * SOAP_FMAC4 soap_get___ns1__Login(struct soap*, struct __ns1__Login *, const char*, const char*);

#ifndef soap_read___ns1__Login
#define soap_read___ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

SOAP_FMAC1 struct __ns1__Login * SOAP_FMAC2 soap_instantiate___ns1__Login(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Login * soap_new___ns1__Login(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Login(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Login * soap_new_req___ns1__Login(struct soap *soap) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); } return _p; }

inline struct __ns1__Login * soap_new_set___ns1__Login(struct soap *soap, _ns1__Login *ns1__Login) { struct __ns1__Login *_p = soap_instantiate___ns1__Login(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Login(soap, _p); _p->ns1__Login = ns1__Login; } return _p; }

inline void soap_delete___ns1__Login(struct soap *soap, struct __ns1__Login *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Login(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__LogoutResponse
#define SOAP_TYPE_PointerTo_ns1__LogoutResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__LogoutResponse(struct soap*, const char *, int, _ns1__LogoutResponse *const*, const char *);
SOAP_FMAC3 _ns1__LogoutResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__LogoutResponse(struct soap*, const char*, _ns1__LogoutResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__LogoutResponse
#define soap_write_PointerTo_ns1__LogoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__LogoutResponse(soap, data),0) || soap_put_PointerTo_ns1__LogoutResponse(soap, data, "ns1:LogoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LogoutResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__LogoutResponse(struct soap*, _ns1__LogoutResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__LogoutResponse
#define soap_read_PointerTo_ns1__LogoutResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__LogoutResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Logout
#define SOAP_TYPE_PointerTo_ns1__Logout (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Logout(struct soap*, _ns1__Logout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Logout(struct soap*, const char *, int, _ns1__Logout *const*, const char *);
SOAP_FMAC3 _ns1__Logout ** SOAP_FMAC4 soap_in_PointerTo_ns1__Logout(struct soap*, const char*, _ns1__Logout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Logout(struct soap*, _ns1__Logout *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Logout
#define soap_write_PointerTo_ns1__Logout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Logout(soap, data),0) || soap_put_PointerTo_ns1__Logout(soap, data, "ns1:Logout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Logout ** SOAP_FMAC4 soap_get_PointerTo_ns1__Logout(struct soap*, _ns1__Logout **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Logout
#define soap_read_PointerTo_ns1__Logout(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Logout(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetGraphResponse
#define SOAP_TYPE_PointerTo_ns1__GetGraphResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetGraphResponse(struct soap*, const char *, int, _ns1__GetGraphResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetGraphResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetGraphResponse(struct soap*, const char*, _ns1__GetGraphResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetGraphResponse
#define soap_write_PointerTo_ns1__GetGraphResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetGraphResponse(soap, data),0) || soap_put_PointerTo_ns1__GetGraphResponse(soap, data, "ns1:GetGraphResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraphResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetGraphResponse(struct soap*, _ns1__GetGraphResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetGraphResponse
#define soap_read_PointerTo_ns1__GetGraphResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetGraphResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetGraph
#define SOAP_TYPE_PointerTo_ns1__GetGraph (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetGraph(struct soap*, _ns1__GetGraph *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetGraph(struct soap*, const char *, int, _ns1__GetGraph *const*, const char *);
SOAP_FMAC3 _ns1__GetGraph ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetGraph(struct soap*, const char*, _ns1__GetGraph **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetGraph(struct soap*, _ns1__GetGraph *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetGraph
#define soap_write_PointerTo_ns1__GetGraph(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__GetGraph(soap, data),0) || soap_put_PointerTo_ns1__GetGraph(soap, data, "ns1:GetGraph", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__GetGraph ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetGraph(struct soap*, _ns1__GetGraph **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetGraph
#define soap_read_PointerTo_ns1__GetGraph(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetGraph(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__LoginResponse
#define SOAP_TYPE_PointerTo_ns1__LoginResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__LoginResponse(struct soap*, _ns1__LoginResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__LoginResponse(struct soap*, const char *, int, _ns1__LoginResponse *const*, const char *);
SOAP_FMAC3 _ns1__LoginResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__LoginResponse(struct soap*, const char*, _ns1__LoginResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__LoginResponse(struct soap*, _ns1__LoginResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__LoginResponse
#define soap_write_PointerTo_ns1__LoginResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__LoginResponse(soap, data),0) || soap_put_PointerTo_ns1__LoginResponse(soap, data, "ns1:LoginResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__LoginResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__LoginResponse(struct soap*, _ns1__LoginResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__LoginResponse
#define soap_read_PointerTo_ns1__LoginResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__LoginResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Login
#define SOAP_TYPE_PointerTo_ns1__Login (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Login(struct soap*, const char *, int, _ns1__Login *const*, const char *);
SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_in_PointerTo_ns1__Login(struct soap*, const char*, _ns1__Login **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Login(struct soap*, _ns1__Login *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Login
#define soap_write_PointerTo_ns1__Login(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_ns1__Login(soap, data),0) || soap_put_PointerTo_ns1__Login(soap, data, "ns1:Login", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _ns1__Login ** SOAP_FMAC4 soap_get_PointerTo_ns1__Login(struct soap*, _ns1__Login **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Login
#define soap_read_PointerTo_ns1__Login(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Login(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__UserTag
#define SOAP_TYPE_PointerTons3__UserTag (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__UserTag(struct soap*, ns3__UserTag *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__UserTag(struct soap*, const char *, int, ns3__UserTag *const*, const char *);
SOAP_FMAC3 ns3__UserTag ** SOAP_FMAC4 soap_in_PointerTons3__UserTag(struct soap*, const char*, ns3__UserTag **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__UserTag(struct soap*, ns3__UserTag *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__UserTag
#define soap_write_PointerTons3__UserTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__UserTag(soap, data),0) || soap_put_PointerTons3__UserTag(soap, data, "ns3:UserTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__UserTag ** SOAP_FMAC4 soap_get_PointerTons3__UserTag(struct soap*, ns3__UserTag **, const char*, const char*);

#ifndef soap_read_PointerTons3__UserTag
#define soap_read_PointerTons3__UserTag(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__UserTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__ConnectionTag
#define SOAP_TYPE_PointerTons3__ConnectionTag (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__ConnectionTag(struct soap*, ns3__ConnectionTag *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__ConnectionTag(struct soap*, const char *, int, ns3__ConnectionTag *const*, const char *);
SOAP_FMAC3 ns3__ConnectionTag ** SOAP_FMAC4 soap_in_PointerTons3__ConnectionTag(struct soap*, const char*, ns3__ConnectionTag **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__ConnectionTag(struct soap*, ns3__ConnectionTag *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__ConnectionTag
#define soap_write_PointerTons3__ConnectionTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__ConnectionTag(soap, data),0) || soap_put_PointerTons3__ConnectionTag(soap, data, "ns3:ConnectionTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ConnectionTag ** SOAP_FMAC4 soap_get_PointerTons3__ConnectionTag(struct soap*, ns3__ConnectionTag **, const char*, const char*);

#ifndef soap_read_PointerTons3__ConnectionTag
#define soap_read_PointerTons3__ConnectionTag(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__ConnectionTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__Connection
#define SOAP_TYPE_PointerTons3__Connection (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__Connection(struct soap*, ns3__Connection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__Connection(struct soap*, const char *, int, ns3__Connection *const*, const char *);
SOAP_FMAC3 ns3__Connection ** SOAP_FMAC4 soap_in_PointerTons3__Connection(struct soap*, const char*, ns3__Connection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__Connection(struct soap*, ns3__Connection *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__Connection
#define soap_write_PointerTons3__Connection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__Connection(soap, data),0) || soap_put_PointerTons3__Connection(soap, data, "ns3:Connection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__Connection ** SOAP_FMAC4 soap_get_PointerTons3__Connection(struct soap*, ns3__Connection **, const char*, const char*);

#ifndef soap_read_PointerTons3__Connection
#define soap_read_PointerTons3__Connection(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__Connection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__ArrayOfUserTag
#define SOAP_TYPE_PointerTons3__ArrayOfUserTag (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__ArrayOfUserTag(struct soap*, ns3__ArrayOfUserTag *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__ArrayOfUserTag(struct soap*, const char *, int, ns3__ArrayOfUserTag *const*, const char *);
SOAP_FMAC3 ns3__ArrayOfUserTag ** SOAP_FMAC4 soap_in_PointerTons3__ArrayOfUserTag(struct soap*, const char*, ns3__ArrayOfUserTag **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__ArrayOfUserTag(struct soap*, ns3__ArrayOfUserTag *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__ArrayOfUserTag
#define soap_write_PointerTons3__ArrayOfUserTag(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__ArrayOfUserTag(soap, data),0) || soap_put_PointerTons3__ArrayOfUserTag(soap, data, "ns3:ArrayOfUserTag", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ArrayOfUserTag ** SOAP_FMAC4 soap_get_PointerTons3__ArrayOfUserTag(struct soap*, ns3__ArrayOfUserTag **, const char*, const char*);

#ifndef soap_read_PointerTons3__ArrayOfUserTag
#define soap_read_PointerTons3__ArrayOfUserTag(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__ArrayOfUserTag(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__ArrayOfConnection
#define SOAP_TYPE_PointerTons3__ArrayOfConnection (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__ArrayOfConnection(struct soap*, ns3__ArrayOfConnection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__ArrayOfConnection(struct soap*, const char *, int, ns3__ArrayOfConnection *const*, const char *);
SOAP_FMAC3 ns3__ArrayOfConnection ** SOAP_FMAC4 soap_in_PointerTons3__ArrayOfConnection(struct soap*, const char*, ns3__ArrayOfConnection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__ArrayOfConnection(struct soap*, ns3__ArrayOfConnection *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__ArrayOfConnection
#define soap_write_PointerTons3__ArrayOfConnection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__ArrayOfConnection(soap, data),0) || soap_put_PointerTons3__ArrayOfConnection(soap, data, "ns3:ArrayOfConnection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__ArrayOfConnection ** SOAP_FMAC4 soap_get_PointerTons3__ArrayOfConnection(struct soap*, ns3__ArrayOfConnection **, const char*, const char*);

#ifndef soap_read_PointerTons3__ArrayOfConnection
#define soap_read_PointerTons3__ArrayOfConnection(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__ArrayOfConnection(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTons3__User
#define SOAP_TYPE_PointerTons3__User (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__User(struct soap*, ns3__User *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__User(struct soap*, const char *, int, ns3__User *const*, const char *);
SOAP_FMAC3 ns3__User ** SOAP_FMAC4 soap_in_PointerTons3__User(struct soap*, const char*, ns3__User **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__User(struct soap*, ns3__User *const*, const char*, const char*);

#ifndef soap_write_PointerTons3__User
#define soap_write_PointerTons3__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTons3__User(soap, data),0) || soap_put_PointerTons3__User(soap, data, "ns3:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ns3__User ** SOAP_FMAC4 soap_get_PointerTons3__User(struct soap*, ns3__User **, const char*, const char*);

#ifndef soap_read_PointerTons3__User
#define soap_read_PointerTons3__User(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons3__User(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data),0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data),0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons3__UserTag
#define SOAP_TYPE_std__vectorTemplateOfPointerTons3__UserTag (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__UserTag(struct soap*, std::vector<ns3__UserTag * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__UserTag(struct soap*, const std::vector<ns3__UserTag * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__UserTag(struct soap*, const char*, int, const std::vector<ns3__UserTag * >*, const char*);
SOAP_FMAC3 std::vector<ns3__UserTag * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__UserTag(struct soap*, const char*, std::vector<ns3__UserTag * >*, const char*);
SOAP_FMAC1 std::vector<ns3__UserTag * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__UserTag(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__UserTag * > * soap_new_std__vectorTemplateOfPointerTons3__UserTag(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__UserTag(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons3__UserTag(struct soap *soap, std::vector<ns3__UserTag * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons3__UserTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons3__Connection
#define SOAP_TYPE_std__vectorTemplateOfPointerTons3__Connection (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons3__Connection(struct soap*, std::vector<ns3__Connection * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons3__Connection(struct soap*, const std::vector<ns3__Connection * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons3__Connection(struct soap*, const char*, int, const std::vector<ns3__Connection * >*, const char*);
SOAP_FMAC3 std::vector<ns3__Connection * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons3__Connection(struct soap*, const char*, std::vector<ns3__Connection * >*, const char*);
SOAP_FMAC1 std::vector<ns3__Connection * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons3__Connection(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns3__Connection * > * soap_new_std__vectorTemplateOfPointerTons3__Connection(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons3__Connection(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons3__Connection(struct soap *soap, std::vector<ns3__Connection * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons3__Connection(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
